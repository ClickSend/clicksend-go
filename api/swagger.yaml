---
swagger: "2.0"
info:
  description: "\nThis is an official SDK for [ClickSend](https://clicksend.com)\n\
    \nBelow you will find a current list of the available methods for clicksend.\n\
    \n*NOTE: You will need to create a free account to use the API. You can register\
    \ [here](https://dashboard.clicksend.com/#/signup/step1/)..*\n"
  version: "3.1"
  title: "ClickSend v3 API"
  termsOfService: "https://www.clicksend.com/au/legal/terms-of-service/"
  contact:
    email: "support@clicksend.com"
host: "rest.clicksend.com"
basePath: "/v3"
tags:
- name: "Account"
  description: "Everything about Accounts"
- name: "Subaccount"
  description: "Everything about Subaccounts"
- name: "SMS"
  description: "Endpoints for sending and viewing messages"
- name: "Sms Campaign"
  description: "Everything about launching and managing SMS Campaigns"
- name: "MMS"
  description: "Everything about sending MMS"
- name: "Post Letter"
  description: "Everything about sending Letters"
- name: "Post Postcard"
  description: "Everything about sending Postcards"
- name: "Post Direct Mail"
  description: "Everything about distributing Flyers"
- name: "Post Return Address"
  description: "Everything about Post Return Addresses"
- name: "Voice"
  description: "Everything about sending and viewing responses to voice messages"
- name: "Fax"
  description: "Everything about sending and viewing fax"
- name: "Email To Sms"
  description: "Everything about Email to SMS"
- name: "Number"
  description: "Everything about purchasing dedicated numbers"
- name: "ContactList"
  description: "Everything about creating and manipulating contact lists"
- name: "Contact"
  description: "Everything about creating moving and deleting contacts"
- name: "Statistics"
  description: "Everything about account statistics"
- name: "Search"
  description: "Everything about searching contact lists"
- name: "Upload"
  description: "Everything about uploading media files"
- name: "Account Recharge"
  description: "Everything about recharging accounts with credit"
- name: "Transfer Credit"
  description: "Everything about transfering credit for resellers"
- name: "Referral Account"
  description: "Everything about viewing referred accounts"
- name: "Reseller Account"
  description: "Everything about viewing creating and modifying clients accounts."
- name: "Countries"
  description: "Everything about viewing country code mapping"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /countries:
    get:
      tags:
      - "Countries"
      summary: "Get all country codes"
      description: "Get all countries"
      operationId: "CountriesGet"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /sms/send:
    post:
      tags:
      - "SMS"
      summary: "Send sms message(s)"
      description: "\n# Send one or more SMS messages\n\nYou can post up to 1000 messages\
        \ with each API call. You can send to a mix of contacts and contact lists,\
        \ as long as the total number of recipients is up to 1000. \nThe response\
        \ contains status and details for each recipient.\n\n*Refer to [Application\
        \ Status Codes](https://dashboard.clicksend.com/#/signup/step1/) for the possible\
        \ response message status strings.*\n"
      operationId: "SmsSendPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "smsMessages"
        description: "SmsMessageCollection model"
        required: true
        schema:
          $ref: "#/definitions/SmsMessageCollection"
        x-exportParamName: "SmsMessages"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /voice/send:
    post:
      tags:
      - "Voice"
      summary: "Send voice message(s)"
      description: "Send a voice call"
      operationId: "VoiceSendPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "voiceMessages"
        description: "VoiceMessageCollection model"
        required: true
        schema:
          $ref: "#/definitions/VoiceMessageCollection"
        x-exportParamName: "VoiceMessages"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /account:
    get:
      tags:
      - "Account"
      summary: "Get account information"
      description: "Get account details"
      operationId: "AccountGet"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    post:
      tags:
      - "Account"
      summary: "Create a new account"
      description: "Create An Account"
      operationId: "AccountPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "account"
        description: "Account model"
        required: true
        schema:
          $ref: "#/definitions/Account"
        x-exportParamName: "Account"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /account/usage/{year}/{month}/subaccount:
    get:
      tags:
      - "Account"
      summary: "Get account useage by subaccount"
      description: "Get account useage by subaccount"
      operationId: "AccountUseageBySubaccountGet"
      produces:
      - "application/json"
      parameters:
      - name: "year"
        in: "path"
        description: "Year to filter by (yyyy)"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Year"
      - name: "month"
        in: "path"
        description: "Month to filter by (mm)"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Month"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /account-verify/send:
    put:
      tags:
      - "Account"
      summary: "Send account activation token"
      description: "Send account activation token"
      operationId: "AccountVerifySendPut"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "accountVerify"
        description: "Account details"
        required: true
        schema:
          $ref: "#/definitions/AccountVerify"
        x-exportParamName: "AccountVerify"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /account-verify/verify/{activation_token}:
    put:
      tags:
      - "Account"
      summary: "Verify new account"
      description: "Verify new account"
      operationId: "AccountVerifyVerifyByActivationTokenPut"
      produces:
      - "application/json"
      parameters:
      - name: "activation_token"
        in: "path"
        description: ""
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ActivationToken"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /sms/price:
    post:
      tags:
      - "SMS"
      summary: "Calculate sms price"
      description: "Calculate sms price"
      operationId: "SmsPricePost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "smsMessages"
        description: "SmsMessageCollection model"
        required: true
        schema:
          $ref: "#/definitions/SmsMessageCollection"
        x-exportParamName: "SmsMessages"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /sms/history/export:
    get:
      tags:
      - "SMS"
      summary: "Export all sms history"
      description: "Export all sms history"
      operationId: "SmsHistoryExportGet"
      produces:
      - "application/json"
      parameters:
      - name: "filename"
        in: "query"
        description: "Filename to download history as"
        required: true
        type: "string"
        x-exportParamName: "Filename"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /sms/receipts:
    get:
      tags:
      - "SMS"
      summary: "Get all delivery receipts"
      description: "Get all delivery receipts"
      operationId: "SmsReceiptsGet"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    post:
      tags:
      - "SMS"
      summary: "Add a delivery receipt"
      description: "Add a delivery receipt"
      operationId: "SmsReceiptsPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "url"
        description: "Url model"
        required: true
        schema:
          $ref: "#/definitions/Url"
        x-exportParamName: "Url"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /sms/receipts-read:
    put:
      tags:
      - "SMS"
      summary: "Mark delivery receipts as read"
      description: "Mark delivery receipts as read"
      operationId: "SmsReceiptsReadPut"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "dateBefore"
        description: "DateBefore model"
        required: false
        schema:
          $ref: "#/definitions/DateBefore"
        x-exportParamName: "DateBefore"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /sms/inbound:
    get:
      tags:
      - "SMS"
      summary: "Get all inbound sms"
      description: "Get all inbound sms"
      operationId: "SmsInboundGet"
      produces:
      - "application/json"
      parameters:
      - name: "q"
        in: "query"
        description: "Your keyword or query."
        required: false
        type: "string"
        x-exportParamName: "Q"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    post:
      tags:
      - "SMS"
      summary: "Create inbound sms"
      description: "Create inbound sms"
      operationId: "SmsInboundPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "url"
        description: "Url model"
        required: true
        schema:
          $ref: "#/definitions/Url"
        x-exportParamName: "Url"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /sms/{message_id}/cancel:
    put:
      tags:
      - "SMS"
      summary: "Update scheduled message as cancelled"
      description: "Update scheduled message as cancelled"
      operationId: "SmsCancelByMessageIdPut"
      produces:
      - "application/json"
      parameters:
      - name: "message_id"
        in: "path"
        description: "The message ID you want to cancel"
        required: true
        type: "string"
        x-exportParamName: "MessageId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /sms/cancel-all:
    put:
      tags:
      - "SMS"
      summary: "Update all scheduled message as cancelled"
      description: "Update all scheduled message as cancelled"
      operationId: "SmsCancelAllPut"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /sms/templates:
    get:
      tags:
      - "SMS"
      summary: "Get lists of all sms templates"
      description: "Get lists of all sms templates"
      operationId: "SmsTemplatesGet"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    post:
      tags:
      - "SMS"
      summary: "Create sms template"
      description: "Create sms template"
      operationId: "SmsTemplatesPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "smsTemplate"
        description: "SmsTemplate model"
        required: true
        schema:
          $ref: "#/definitions/SmsTemplate"
        x-exportParamName: "SmsTemplate"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /sms/templates/{template_id}:
    put:
      tags:
      - "SMS"
      summary: "Update sms template"
      description: "Update sms template"
      operationId: "SmsTemplatesByTemplateIdPut"
      produces:
      - "application/json"
      parameters:
      - name: "template_id"
        in: "path"
        description: "Template id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "TemplateId"
      - in: "body"
        name: "smsTemplate"
        description: "Template item"
        required: true
        schema:
          $ref: "#/definitions/SmsTemplate"
        x-exportParamName: "SmsTemplate"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    delete:
      tags:
      - "SMS"
      summary: "Delete sms template"
      description: "Delete sms template"
      operationId: "SmsTemplatesByTemplateIdDelete"
      produces:
      - "application/json"
      parameters:
      - name: "template_id"
        in: "path"
        description: "Template id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "TemplateId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /voice/price:
    post:
      tags:
      - "Voice"
      summary: "Calculate voice price"
      description: "Calculate voice price"
      operationId: "VoicePricePost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "voiceMessages"
        description: "VoiceMessageCollection model"
        required: true
        schema:
          $ref: "#/definitions/VoiceMessageCollection"
        x-exportParamName: "VoiceMessages"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /voice/lang:
    get:
      tags:
      - "Voice"
      summary: "Get all voice languages"
      description: "Get all voice languages"
      operationId: "VoiceLangGet"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /voice/receipts:
    get:
      tags:
      - "Voice"
      summary: "Get all delivery receipts"
      description: "Get all delivery receipts"
      operationId: "VoiceReceiptsGet"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    post:
      tags:
      - "Voice"
      summary: "Add a delivery receipt"
      description: "Add a delivery receipt"
      operationId: "VoiceReceiptsPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "url"
        description: "Url model"
        required: true
        schema:
          $ref: "#/definitions/Url"
        x-exportParamName: "Url"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /voice/receipts-read:
    put:
      tags:
      - "Voice"
      summary: "Mark delivery receipts as read"
      description: "Mark delivery receipts as read"
      operationId: "VoiceReceiptsReadPut"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "dateBefore"
        description: "DateBefore model"
        required: false
        schema:
          $ref: "#/definitions/DateBefore"
        x-exportParamName: "DateBefore"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /voice/{message_id}/cancel:
    put:
      tags:
      - "Voice"
      summary: "Update voice message status as cancelled"
      description: "Update voice message status as cancelled"
      operationId: "VoiceCancelByMessageIdPut"
      produces:
      - "application/json"
      parameters:
      - name: "message_id"
        in: "path"
        description: "Your voice message id"
        required: true
        type: "string"
        x-exportParamName: "MessageId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /voice/cancel-all:
    put:
      tags:
      - "Voice"
      summary: "Update all voice messages as cancelled"
      description: "Update all voice messages as cancelled"
      operationId: "VoiceCancelAllPut"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /voice/history/export:
    get:
      tags:
      - "Voice"
      summary: "Export voice history"
      description: "Export voice history"
      operationId: "VoiceHistoryExportGet"
      produces:
      - "application/json"
      parameters:
      - name: "filename"
        in: "query"
        description: "Filename to export to"
        required: true
        type: "string"
        x-exportParamName: "Filename"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /subaccounts:
    get:
      tags:
      - "Subaccount"
      summary: "Get all subaccounts"
      description: "Get all subaccounts"
      operationId: "SubaccountsGet"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    post:
      tags:
      - "Subaccount"
      summary: "Create new subaccount"
      description: "Create new subaccount"
      operationId: "SubaccountsPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "subaccount"
        description: "Subaccount model"
        required: true
        schema:
          $ref: "#/definitions/Subaccount"
        x-exportParamName: "Subaccount"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /subaccounts/{subaccount_id}:
    get:
      tags:
      - "Subaccount"
      summary: "Get specific subaccount"
      description: "Get specific subaccount"
      operationId: "SubaccountsBySubaccountIdGet"
      produces:
      - "application/json"
      parameters:
      - name: "subaccount_id"
        in: "path"
        description: "ID of subaccount to get"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "SubaccountId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    put:
      tags:
      - "Subaccount"
      summary: "Update subaccount"
      description: "Update subaccount"
      operationId: "SubaccountsBySubaccountIdPut"
      produces:
      - "application/json"
      parameters:
      - name: "subaccount_id"
        in: "path"
        description: "ID of subaccount to update"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "SubaccountId"
      - in: "body"
        name: "subaccount"
        description: "Subaccount model"
        required: true
        schema:
          $ref: "#/definitions/Subaccount"
        x-exportParamName: "Subaccount"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    delete:
      tags:
      - "Subaccount"
      summary: "Delete a subaccount"
      description: "Delete a subaccount"
      operationId: "SubaccountsBySubaccountIdDelete"
      produces:
      - "application/json"
      parameters:
      - name: "subaccount_id"
        in: "path"
        description: "ID of subaccount to delete"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "SubaccountId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /subaccounts/{subaccount_id}/regen-api-key:
    put:
      tags:
      - "Subaccount"
      summary: "Regenerate an API Key"
      description: "Regenerate an API Key"
      operationId: "SubaccountsRegenApiKeyBySubaccountIdPut"
      produces:
      - "application/json"
      parameters:
      - name: "subaccount_id"
        in: "path"
        description: "ID of subaccount to regenerate API key for"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "SubaccountId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /lists:
    get:
      tags:
      - "ContactList"
      summary: "Get all contact lists"
      description: "Get all contact lists"
      operationId: "ListsGet"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    post:
      tags:
      - "ContactList"
      summary: "Create new contact list"
      description: "Create new contact list"
      operationId: "ListsPost"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "contactList"
        description: "Contact list model"
        required: true
        schema:
          $ref: "#/definitions/ContactList"
        x-exportParamName: "ContactList"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /lists/{list_id}:
    get:
      tags:
      - "ContactList"
      summary: "Get specific contact list"
      description: "Get specific contact list"
      operationId: "ListsByListIdGet"
      produces:
      - "application/json"
      parameters:
      - name: "list_id"
        in: "path"
        description: "List ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ListId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    put:
      tags:
      - "ContactList"
      summary: "Update specific contact list"
      description: "Update specific contact list"
      operationId: "ListsByListIdPut"
      produces:
      - "application/json"
      parameters:
      - name: "list_id"
        in: "path"
        description: "Your list id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ListId"
      - in: "body"
        name: "contactList"
        description: "Contact list model"
        required: true
        schema:
          $ref: "#/definitions/ContactList"
        x-exportParamName: "ContactList"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    delete:
      tags:
      - "ContactList"
      summary: "ListsByListIdDelete"
      description: "Delete a specific contact list"
      operationId: "ListsByListIdDelete"
      produces:
      - "application/json"
      parameters:
      - name: "list_id"
        in: "path"
        description: "List ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ListId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /lists/{list_id}/remove-duplicates:
    put:
      tags:
      - "ContactList"
      summary: "Remove duplicate contacts"
      description: "Remove duplicate contacts"
      operationId: "ListsRemoveDuplicatesByListIdPut"
      produces:
      - "application/json"
      parameters:
      - name: "list_id"
        in: "path"
        description: "Your list id"
        required: true
        type: "integer"
        exclusiveMaximum: false
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "ListId"
      - in: "body"
        name: "fields"
        description: "Fields model"
        required: true
        schema:
          $ref: "#/definitions/Fields"
        x-exportParamName: "Fields"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /lists/{list_id}/contacts:
    get:
      tags:
      - "Contact"
      summary: "Get all contacts in a list"
      description: "Get all contacts in a list"
      operationId: "ListsContactsByListIdGet"
      produces:
      - "application/json"
      parameters:
      - name: "list_id"
        in: "path"
        description: "Contact list ID"
        required: true
        type: "integer"
        exclusiveMaximum: false
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "ListId"
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    post:
      tags:
      - "Contact"
      summary: "Create new contact"
      description: "Create new contact"
      operationId: "ListsContactsByListIdPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "contact"
        description: "Contact model"
        required: true
        schema:
          $ref: "#/definitions/Contact"
        x-exportParamName: "Contact"
      - name: "list_id"
        in: "path"
        description: "List id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ListId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /lists/{list_id}/contacts/{contact_id}:
    get:
      tags:
      - "Contact"
      summary: "Get a specific contact"
      description: "Get a specific contact"
      operationId: "ListsContactsByListIdAndContactIdGet"
      produces:
      - "application/json"
      parameters:
      - name: "list_id"
        in: "path"
        description: "Your contact list id you want to access."
        required: true
        type: "integer"
        exclusiveMaximum: false
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "ListId"
      - name: "contact_id"
        in: "path"
        description: "Your contact id you want to access."
        required: true
        type: "integer"
        exclusiveMaximum: false
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "ContactId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    put:
      tags:
      - "Contact"
      summary: "Update specific contact"
      description: "Update specific contact"
      operationId: "ListsContactsByListIdAndContactIdPut"
      produces:
      - "application/json"
      parameters:
      - name: "list_id"
        in: "path"
        description: "Contact list id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ListId"
      - name: "contact_id"
        in: "path"
        description: "Contact ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ContactId"
      - in: "body"
        name: "contact"
        description: "Contact model"
        required: true
        schema:
          $ref: "#/definitions/Contact"
        x-exportParamName: "Contact"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    delete:
      tags:
      - "Contact"
      summary: "Delete a contact"
      description: "Delete a contact"
      operationId: "ListsContactsByListIdAndContactIdDelete"
      produces:
      - "application/json"
      parameters:
      - name: "list_id"
        in: "path"
        description: "List ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ListId"
      - name: "contact_id"
        in: "path"
        description: "Contact ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ContactId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /lists/{list_id}/remove-opted-out-contacts/{opt_out_list_id}:
    put:
      tags:
      - "Contact"
      summary: "Remove all opted out contacts"
      description: "Remove all opted out contacts"
      operationId: "ListsRemoveOptedOutContactsByListIdAndOptOutListIdPut"
      produces:
      - "application/json"
      parameters:
      - name: "list_id"
        in: "path"
        description: "Your list id"
        required: true
        type: "integer"
        exclusiveMaximum: false
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "ListId"
      - name: "opt_out_list_id"
        in: "path"
        description: "Your opt out list id"
        required: true
        type: "integer"
        exclusiveMaximum: false
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "OptOutListId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /lists/{from_list_id}/contacts/{contact_id}/transfer/{to_list_id}:
    put:
      tags:
      - "Contact"
      summary: "Transfer contact to another list"
      description: "Transfer contact to another list"
      operationId: "ListsTransferContactPut"
      produces:
      - "application/json"
      parameters:
      - name: "from_list_id"
        in: "path"
        description: "List ID for list that contains contact."
        required: true
        type: "integer"
        exclusiveMaximum: false
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "FromListId"
      - name: "contact_id"
        in: "path"
        description: "Contact ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ContactId"
      - name: "to_list_id"
        in: "path"
        description: "List ID for list you want to transfer contact to."
        required: true
        type: "integer"
        exclusiveMaximum: false
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "ToListId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /numbers:
    get:
      tags:
      - "Number"
      summary: "Get all availible dedicated numbers"
      description: "Get all availible dedicated numbers"
      operationId: "NumbersGet"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /numbers/buy/{dedicated_number}:
    post:
      tags:
      - "Number"
      summary: "Buy dedicated number"
      description: "Buy dedicated number"
      operationId: "NumbersBuyByDedicatedNumberPost"
      produces:
      - "application/json"
      parameters:
      - name: "dedicated_number"
        in: "path"
        description: "Phone number to purchase"
        required: true
        type: "string"
        x-exportParamName: "DedicatedNumber"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /numbers/search/{country}:
    get:
      tags:
      - "Number"
      summary: "Get all dedicated numbers by country"
      description: "Get all dedicated numbers by country"
      operationId: "NumbersSearchByCountryGet"
      produces:
      - "application/json"
      parameters:
      - name: "country"
        in: "path"
        description: "Country code to search"
        required: true
        type: "string"
        x-exportParamName: "Country"
      - name: "search"
        in: "query"
        description: "Your search pattern or query."
        required: false
        type: "string"
        x-exportParamName: "Search"
        x-optionalDataType: "String"
      - name: "search_type"
        in: "query"
        description: "Your strategy for searching, 0 = starts with, 1 = anywhere,\
          \ 2 = ends with."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "SearchType"
        x-optionalDataType: "Int32"
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /statistics/voice:
    get:
      tags:
      - "Statistics"
      summary: "Get voice statistics"
      description: "Get voice statistics"
      operationId: "StatisticsVoiceGet"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /forgot-username:
    put:
      tags:
      - "Account"
      summary: "Forgot username"
      description: "Forgot username"
      operationId: "ForgotUsernamePut"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "forgotUsername"
        required: false
        schema:
          $ref: "#/definitions/forgotUsername"
        x-exportParamName: "ForgotUsername"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /forgot-password:
    put:
      tags:
      - "Account"
      summary: "Forgot password"
      description: "Forgot password"
      operationId: "ForgotPasswordPut"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "forgotPassword"
        required: false
        schema:
          $ref: "#/definitions/forgotPassword"
        x-exportParamName: "ForgotPassword"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /forgot-password/verify:
    put:
      tags:
      - "Account"
      summary: "Verify forgot password"
      description: "Verify forgot password"
      operationId: "ForgotPasswordVerifyPut"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "verifyPassword"
        description: "verifyPassword data"
        required: true
        schema:
          $ref: "#/definitions/AccountForgotPasswordVerify"
        x-exportParamName: "VerifyPassword"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /sms/email-sms:
    get:
      tags:
      - "Email To Sms"
      summary: "Get list of email to sms allowed addresses"
      description: "Get list of email to sms allowed addresses"
      operationId: "SmsEmailSmsGet"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    post:
      tags:
      - "Email To Sms"
      summary: "Create email to sms allowed address"
      description: "Create email to sms allowed address"
      operationId: "SmsEmailSmsPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "emailSmsAddress"
        description: "EmailSMSAddress model"
        required: true
        schema:
          $ref: "#/definitions/EmailSMSAddress"
        x-exportParamName: "EmailSmsAddress"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /sms/email-sms-stripped-strings:
    get:
      tags:
      - "Email To Sms"
      summary: "Get list of email to sms stripped string rules"
      description: "Get list of email to sms stripped string rules"
      operationId: "SmsEmailSmsStrippedStringsGet"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    post:
      tags:
      - "Email To Sms"
      summary: "Create email to sms stripped string rule"
      description: "Create email to sms stripped string rules"
      operationId: "SmsEmailSmsStrippedStringPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "strippedString"
        description: "StrippedString model"
        required: true
        schema:
          $ref: "#/definitions/StrippedString"
        x-exportParamName: "StrippedString"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /sms/email-sms-stripped-strings/{rule_id}:
    get:
      tags:
      - "Email To Sms"
      summary: "Get email to sms stripped string rule"
      description: "Get email to sms stripped string rule"
      operationId: "SmsEmailSmsStrippedStringGet"
      produces:
      - "application/json"
      parameters:
      - name: "rule_id"
        in: "path"
        description: "Your rule id"
        required: true
        type: "integer"
        exclusiveMaximum: false
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "RuleId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    put:
      tags:
      - "Email To Sms"
      summary: "Update email to sms stripped string rule"
      description: "Update email to sms stripped string rule"
      operationId: "SmsEmailSmsStrippedStringPut"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "strippedString"
        description: "StrippedString model"
        required: true
        schema:
          $ref: "#/definitions/StrippedString"
        x-exportParamName: "StrippedString"
      - name: "rule_id"
        in: "path"
        description: "Your rule id"
        required: true
        type: "integer"
        exclusiveMaximum: false
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "RuleId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    delete:
      tags:
      - "Email To Sms"
      summary: "Delete email to sms stripped string rule"
      description: "Delete email to sms stripped string rule"
      operationId: "SmsEmailSmsStrippedStringDelete"
      produces:
      - "application/json"
      parameters:
      - name: "rule_id"
        in: "path"
        description: "Your rule id"
        required: true
        type: "integer"
        exclusiveMaximum: false
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "RuleId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /search/contacts-lists:
    get:
      tags:
      - "Search"
      summary: "Get list of searched contact list"
      description: "Get list of searched contact list"
      operationId: "SearchContactsListsGet"
      produces:
      - "application/json"
      parameters:
      - name: "q"
        in: "query"
        description: "Your keyword or query."
        required: true
        type: "string"
        x-exportParamName: "Q"
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /referral/accounts:
    get:
      tags:
      - "Referral Account"
      summary: "Get all referral accounts"
      description: "Get all referral accounts"
      operationId: "ReferralAccountsGet"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /reseller/accounts:
    get:
      tags:
      - "Reseller Account"
      summary: "Get list of reseller accounts"
      description: "Get list of reseller accounts"
      operationId: "ResellerAccountsGet"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    post:
      tags:
      - "Reseller Account"
      summary: "Create reseller account"
      description: "Create reseller account"
      operationId: "ResellerAccountsPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "resellerAccount"
        description: "ResellerAccount model"
        required: true
        schema:
          $ref: "#/definitions/ResellerAccount"
        x-exportParamName: "ResellerAccount"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /reseller/accounts/{client_user_id}:
    get:
      tags:
      - "Reseller Account"
      summary: "Get Reseller clients Account"
      description: "Get Reseller clients Account"
      operationId: "ResellerAccountsByClientUserIdGet"
      produces:
      - "application/json"
      parameters:
      - name: "client_user_id"
        in: "path"
        description: "User ID of client"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ClientUserId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    put:
      tags:
      - "Reseller Account"
      summary: "Update Reseller clients Account"
      description: "Update Reseller clients Account"
      operationId: "ResellerAccountsByClientUserIdPut"
      produces:
      - "application/json"
      parameters:
      - name: "client_user_id"
        in: "path"
        description: "User ID of client"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ClientUserId"
      - in: "body"
        name: "resellerAccount"
        description: "ResellerAccount model"
        required: true
        schema:
          $ref: "#/definitions/ResellerAccount"
        x-exportParamName: "ResellerAccount"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /reseller/transfer-credit:
    put:
      tags:
      - "Transfer Credit"
      summary: "Transfer Credit"
      description: "Transfer Credit"
      operationId: "ResellerTransferCreditPut"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "resellerAccountTransferCredit"
        description: "ResellerAccountTransferCredit model"
        required: true
        schema:
          $ref: "#/definitions/ResellerAccountTransferCredit"
        x-exportParamName: "ResellerAccountTransferCredit"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /recharge/credit-card:
    get:
      tags:
      - "Account Recharge"
      summary: "Get Credit Card info"
      description: "Get Credit Card info"
      operationId: "RechargeCreditCardGet"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    put:
      tags:
      - "Account Recharge"
      summary: "Update credit card info"
      description: "Update credit card info"
      operationId: "RechargeCreditCardPut"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "creditCard"
        description: "CreditCard model"
        required: true
        schema:
          $ref: "#/definitions/CreditCard"
        x-exportParamName: "CreditCard"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /recharge/packages:
    get:
      tags:
      - "Account Recharge"
      summary: "Get list of all packages"
      description: "Get list of all packages"
      operationId: "RechargePackagesGet"
      produces:
      - "application/json"
      parameters:
      - name: "country"
        in: "query"
        description: "Country code"
        required: false
        type: "string"
        x-exportParamName: "Country"
        x-optionalDataType: "String"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /recharge/purchase/{package_id}:
    put:
      tags:
      - "Account Recharge"
      summary: "Purchase a package"
      description: "Purchase a package"
      operationId: "RechargePurchaseByPackageIdPut"
      produces:
      - "application/json"
      parameters:
      - name: "package_id"
        in: "path"
        description: "ID of package to purchase"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "PackageId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /recharge/transactions:
    get:
      tags:
      - "Account Recharge"
      summary: "Purchase a package"
      description: "Get all transactions"
      operationId: "RechargeTransactionsGet"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /recharge/transactions/{transaction_id}:
    get:
      tags:
      - "Account Recharge"
      summary: "Get specific Transaction"
      description: "Get specific Transaction"
      operationId: "RechargeTransactionsByTransactionIdGet"
      produces:
      - "application/json"
      parameters:
      - name: "transaction_id"
        in: "path"
        description: "ID of transaction to retrieve"
        required: true
        type: "string"
        x-exportParamName: "TransactionId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /sms-campaigns/send:
    post:
      tags:
      - "Sms Campaign"
      summary: "Create sms campaign"
      description: "Create sms campaign"
      operationId: "SmsCampaignsSendPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "campaign"
        description: "SmsCampaign model"
        required: true
        schema:
          $ref: "#/definitions/SmsCampaign"
        x-exportParamName: "Campaign"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /sms-campaigns/price:
    post:
      tags:
      - "Sms Campaign"
      summary: "Calculate price for sms campaign"
      description: "Calculate price for sms campaign"
      operationId: "SmsCampaignsPricePost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "campaign"
        description: "SmsCampaign model"
        required: true
        schema:
          $ref: "#/definitions/SmsCampaign"
        x-exportParamName: "Campaign"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /sms-campaigns/{sms_campaign_id}:
    get:
      tags:
      - "Sms Campaign"
      summary: "Get specific sms campaign"
      description: "Get specific sms campaign"
      operationId: "SmsCampaignBySmsCampaignIdGet"
      produces:
      - "application/json"
      parameters:
      - name: "sms_campaign_id"
        in: "path"
        description: "ID of SMS campaign to retrieve"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "SmsCampaignId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    put:
      tags:
      - "Sms Campaign"
      summary: "Update sms campaign"
      description: "Update sms campaign"
      operationId: "SmsCampaignsBySmsCampaignIdPut"
      produces:
      - "application/json"
      parameters:
      - name: "sms_campaign_id"
        in: "path"
        description: "ID of SMS campaign to update"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "SmsCampaignId"
      - in: "body"
        name: "campaign"
        description: "SmsCampaign model"
        required: true
        schema:
          $ref: "#/definitions/SmsCampaign"
        x-exportParamName: "Campaign"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /sms-campaigns/{sms_campaign_id}/cancel:
    put:
      tags:
      - "Sms Campaign"
      summary: "Cancel sms campaign"
      description: "Cancel sms campaign"
      operationId: "SmsCampaignsCancelBySmsCampaignIdPut"
      produces:
      - "application/json"
      parameters:
      - name: "sms_campaign_id"
        in: "path"
        description: "ID of SMS Campaign to cancel"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "SmsCampaignId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /statistics/sms:
    get:
      tags:
      - "Statistics"
      summary: "Get sms statistics"
      description: "Get sms statistics"
      operationId: "StatisticsSmsGet"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /sms-campaigns:
    get:
      tags:
      - "Sms Campaign"
      summary: "Get list of sms campaigns"
      description: "Get list of sms campaigns"
      operationId: "SmsCampaignsGet"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /mms-campaigns/send:
    post:
      tags:
      - "Mms Campaign"
      summary: "Create mms campaign"
      description: "Create mms campaign"
      operationId: "MmsCampaignsSendPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "campaign"
        description: "MmsCampaign model"
        required: true
        schema:
          $ref: "#/definitions/MmsCampaign"
        x-exportParamName: "Campaign"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /mms-campaigns/price:
    post:
      tags:
      - "Mms Campaign"
      summary: "Calculate price for mms campaign"
      description: "Calculate price for sms campaign"
      operationId: "MmsCampaignsPricePost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "campaign"
        description: "MmsCampaign model"
        required: true
        schema:
          $ref: "#/definitions/MmsCampaign"
        x-exportParamName: "Campaign"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /mms-campaigns/{mms_campaign_id}:
    get:
      tags:
      - "Mms Campaign"
      summary: "Get specific mms campaign"
      description: "Get specific mms campaign"
      operationId: "MmsCampaignByMmsCampaignIdGet"
      produces:
      - "application/json"
      parameters:
      - name: "mms_campaign_id"
        in: "path"
        description: "ID of MMS campaign to retrieve"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MmsCampaignId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    put:
      tags:
      - "Mms Campaign"
      summary: "Update mms campaign"
      description: "Update mms campaign"
      operationId: "MmsCampaignsByMmsCampaignIdPut"
      produces:
      - "application/json"
      parameters:
      - name: "mms_campaign_id"
        in: "path"
        description: "ID of MMS campaign to update"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MmsCampaignId"
      - in: "body"
        name: "campaign"
        description: "MmsCampaign model"
        required: true
        schema:
          $ref: "#/definitions/MmsCampaign"
        x-exportParamName: "Campaign"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /mms-campaigns/{mms_campaign_id}/cancel:
    put:
      tags:
      - "Mms Campaign"
      summary: "Cancel mms campaign"
      description: "Cancel sms campaign"
      operationId: "MmsCampaignsCancelByMmsCampaignIdPut"
      produces:
      - "application/json"
      parameters:
      - name: "mms_campaign_id"
        in: "path"
        description: "ID of MMS Campaign to cancel"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "MmsCampaignId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /mms-campaigns:
    get:
      tags:
      - "Mms Campaign"
      summary: "Get list of mms campaigns"
      description: "Get list of mms campaigns"
      operationId: "MmsCampaignsGet"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /post/letters/send:
    post:
      tags:
      - "Post Letter"
      summary: "Send post letter"
      description: "Send post letter"
      operationId: "PostLettersSendPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postLetter"
        description: "PostLetter model"
        required: true
        schema:
          $ref: "#/definitions/PostLetter"
        x-exportParamName: "PostLetter"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /post/letters/price:
    post:
      tags:
      - "Post Letter"
      summary: "Calculate post letter price"
      description: "Calculate post letter price"
      operationId: "PostLettersPricePost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postLetter"
        description: "PostLetter model"
        required: true
        schema:
          $ref: "#/definitions/PostLetter"
        x-exportParamName: "PostLetter"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /post/letters/history:
    get:
      tags:
      - "Post Letter"
      summary: "Get all post letter history"
      description: "Get all post letter history"
      operationId: "PostLettersHistoryGet"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /post/letters/history/export:
    get:
      tags:
      - "Post Letter"
      summary: "export post letter history"
      description: "export post letter history"
      operationId: "PostLettersExportGet"
      produces:
      - "application/json"
      parameters:
      - name: "filename"
        in: "query"
        description: "Filename to export to"
        required: true
        type: "string"
        x-exportParamName: "Filename"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /post/return-addresses:
    get:
      tags:
      - "Post Return Address"
      summary: "Get list of post return addresses"
      description: "Get list of post return addresses"
      operationId: "PostReturnAddressesGet"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    post:
      tags:
      - "Post Return Address"
      summary: "Create post return address"
      description: "Create post return address"
      operationId: "PostReturnAddressesPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "returnAddress"
        description: "Address model"
        required: true
        schema:
          $ref: "#/definitions/Address"
        x-exportParamName: "ReturnAddress"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /post/return-addresses/{return_address_id}:
    get:
      tags:
      - "Post Return Address"
      summary: "Get specific post return address"
      description: "Get specific post return address"
      operationId: "PostReturnAddressesByReturnAddressIdGet"
      produces:
      - "application/json"
      parameters:
      - name: "return_address_id"
        in: "path"
        description: "Return address ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ReturnAddressId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    put:
      tags:
      - "Post Return Address"
      summary: "Update post return address"
      description: "Update post return address"
      operationId: "PostReturnAddressesByReturnAddressIdPut"
      produces:
      - "application/json"
      parameters:
      - name: "return_address_id"
        in: "path"
        description: "Return address ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ReturnAddressId"
      - in: "body"
        name: "returnAddress"
        description: "Address model"
        required: true
        schema:
          $ref: "#/definitions/Address"
        x-exportParamName: "ReturnAddress"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    delete:
      tags:
      - "Post Return Address"
      summary: "Delete specific post return address"
      description: "Delete specific post return address"
      operationId: "PostReturnAddressesByReturnAddressIdDelete"
      produces:
      - "application/json"
      parameters:
      - name: "return_address_id"
        in: "path"
        description: "Return address ID"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ReturnAddressId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /fax/receipts:
    get:
      tags:
      - "FAX"
      summary: "Get all delivery receipts"
      description: "Get all delivery receipts"
      operationId: "FaxReceiptsGet"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    post:
      tags:
      - "FAX"
      summary: "Add a delivery receipt"
      description: "Add a delivery receipt"
      operationId: "FaxReceiptsPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "url"
        description: "Url model"
        required: true
        schema:
          $ref: "#/definitions/Url"
        x-exportParamName: "Url"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /fax/receipts/{message_id}:
    get:
      tags:
      - "FAX"
      summary: "Get a single fax receipt based on message id."
      description: "Get a single fax receipt based on message id."
      operationId: "FaxReceiptsByMessageIdGet"
      produces:
      - "application/json"
      parameters:
      - name: "message_id"
        in: "path"
        description: "ID of the message receipt to retrieve"
        required: true
        type: "string"
        x-exportParamName: "MessageId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /fax/receipts-read:
    put:
      tags:
      - "FAX"
      summary: "Mark delivery receipts as read"
      description: "Mark delivery receipts as read"
      operationId: "FaxReceiptsReadPut"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "dateBefore"
        description: "DateBefore model"
        required: false
        schema:
          $ref: "#/definitions/DateBefore"
        x-exportParamName: "DateBefore"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /fax/history:
    get:
      tags:
      - "FAX"
      summary: "Get a list of Fax History."
      description: "Get a list of Fax History."
      operationId: "FaxHistoryGet"
      produces:
      - "application/json"
      parameters:
      - name: "date_from"
        in: "query"
        description: "Customize result by setting from date (timestsamp) Example:\
          \ 1457572619."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "DateFrom"
        x-optionalDataType: "Int32"
      - name: "date_to"
        in: "query"
        description: "Customize result by setting to date (timestamp) Example: 1457573000."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "DateTo"
        x-optionalDataType: "Int32"
      - name: "q"
        in: "query"
        description: "Custom query Example: status:Sent,status_code:201."
        required: false
        type: "string"
        x-exportParamName: "Q"
        x-optionalDataType: "String"
      - name: "order"
        in: "query"
        description: "Order result by Example: date_added:desc,list_id:desc."
        required: false
        type: "string"
        x-exportParamName: "Order"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /sms/inbound-read:
    put:
      tags:
      - "SMS"
      summary: "Mark inbound SMS as read"
      description: "Mark all inbound SMS as read optionally before a certain date"
      operationId: "SmsInboundReadPut"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "dateBefore"
        description: "DateBefore model"
        required: false
        schema:
          $ref: "#/definitions/DateBefore"
        x-exportParamName: "DateBefore"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /sms/inbound-read/{message_id}:
    put:
      tags:
      - "SMS"
      summary: "Mark inbound SMS as read"
      description: "Mark specific inbound SMS as read"
      operationId: "SmsInboundReadByMessageIdPut"
      produces:
      - "application/json"
      parameters:
      - name: "message_id"
        in: "path"
        description: "Message ID"
        required: true
        type: "string"
        x-exportParamName: "MessageId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /sms/receipts/{message_id}:
    get:
      tags:
      - "SMS"
      summary: "Get a Specific Delivery Receipt"
      description: "Get a Specific Delivery Receipt"
      operationId: "SmsReceiptsByMessageIdGet"
      produces:
      - "application/json"
      parameters:
      - name: "message_id"
        in: "path"
        description: "Message ID"
        required: true
        type: "string"
        x-exportParamName: "MessageId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /mms/send:
    post:
      tags:
      - "MMS"
      summary: "Send MMS"
      description: "Send MMS"
      operationId: "MmsSendPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "mmsMessages"
        description: "MmsMessageCollection model"
        required: true
        schema:
          $ref: "#/definitions/MmsMessageCollection"
        x-exportParamName: "MmsMessages"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /fax/price:
    post:
      tags:
      - "FAX"
      summary: "Calculate Total Price for Fax Messages sent"
      description: "Calculate Total Price for Fax Messages sent"
      operationId: "FaxPricePost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "faxMessage"
        description: "FaxMessageCollection model"
        required: true
        schema:
          $ref: "#/definitions/FaxMessageCollection"
        x-exportParamName: "FaxMessage"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /post/postcards/send:
    post:
      tags:
      - "Post Postcard"
      summary: "Send one or more postcards"
      description: "Send one or more postcards"
      operationId: "PostPostcardsSendPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postPostcards"
        description: "PostPostcard model"
        required: true
        schema:
          $ref: "#/definitions/PostPostcard"
        x-exportParamName: "PostPostcards"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /post/postcards/price:
    post:
      tags:
      - "Post Postcard"
      summary: "Calculate price for sending one or more postcards"
      description: "Calculate price for sending one or more postcards"
      operationId: "PostPostcardsPricePost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "postPostcards"
        description: "PostPostcard model"
        required: true
        schema:
          $ref: "#/definitions/PostPostcard"
        x-exportParamName: "PostPostcards"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /uploads:
    post:
      tags:
      - "Upload"
      summary: "Upload File"
      description: "Upload File"
      operationId: "UploadsPost"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "uploadFile"
        description: "Your file to be uploaded"
        required: true
        schema:
          $ref: "#/definitions/UploadFile"
        x-exportParamName: "UploadFile"
      - name: "convert"
        in: "query"
        description: ""
        required: true
        type: "string"
        x-exportParamName: "Convert"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /fax/send:
    post:
      tags:
      - "FAX"
      summary: "Send a fax using supplied supported file-types."
      description: "Send a fax using supplied supported file-types."
      operationId: "FaxSendPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "faxMessage"
        description: "FaxMessageCollection model"
        required: true
        schema:
          $ref: "#/definitions/FaxMessageCollection"
        x-exportParamName: "FaxMessage"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /mms/price:
    post:
      tags:
      - "MMS"
      summary: "Get Price for MMS sent"
      description: "Get Price for MMS sent"
      operationId: "MmsPricePost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "mmsMessages"
        description: "MmsMessageCollection model"
        required: true
        schema:
          $ref: "#/definitions/MmsMessageCollection"
        x-exportParamName: "MmsMessages"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /mms/receipts:
    get:
      tags:
      - "MMS"
      summary: "Get all delivery receipts"
      description: "Get all delivery receipts"
      operationId: "MmsReceiptsGet"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /mms/receipts-read:
    put:
      tags:
      - "MMS"
      summary: "Mark delivery receipts as read"
      description: "Mark delivery receipts as read"
      operationId: "MmsReceiptsReadPut"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "dateBefore"
        description: "DateBefore model"
        required: false
        schema:
          $ref: "#/definitions/DateBefore"
        x-exportParamName: "DateBefore"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /post/postcards/history:
    get:
      tags:
      - "Post Postcard"
      summary: "Retrieve the history of postcards sent or scheduled"
      description: "Retrieve the history of postcards sent or scheduled"
      operationId: "PostPostcardsHistoryGet"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /post/postcards/history/export:
    get:
      tags:
      - "Post Postcard"
      summary: "Export postcard history to a CSV file"
      description: "Export postcard history to a CSV file"
      operationId: "PostPostcardsHistoryExportGet"
      produces:
      - "application/json"
      parameters:
      - name: "filename"
        in: "query"
        description: "Filename to export to"
        required: true
        type: "string"
        x-exportParamName: "Filename"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /lists/{list_id}/import:
    post:
      tags:
      - "ContactList"
      summary: "Import contacts to list"
      description: "Import contacts to list"
      operationId: "ListsImportByListIdPost"
      produces:
      - "application/json"
      parameters:
      - name: "list_id"
        in: "path"
        description: "Your contact list id you want to access."
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ListId"
      - in: "body"
        name: "file"
        description: "ContactListImport model"
        required: true
        schema:
          $ref: "#/definitions/ContactListImport"
        x-exportParamName: "File"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /voice/history:
    get:
      tags:
      - "Voice"
      summary: "Get all voice history"
      description: "Get all voice history"
      operationId: "VoiceHistoryGet"
      produces:
      - "application/json"
      parameters:
      - name: "date_from"
        in: "query"
        description: "Timestamp (from) used to show records by date."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "DateFrom"
        x-optionalDataType: "Int32"
      - name: "date_to"
        in: "query"
        description: "Timestamp (to) used to show records by date"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "DateTo"
        x-optionalDataType: "Int32"
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /sms/history:
    get:
      tags:
      - "SMS"
      summary: "Get all sms history"
      description: "Get all sms history"
      operationId: "SmsHistoryGet"
      produces:
      - "application/json"
      parameters:
      - name: "q"
        in: "query"
        description: "Custom query Example: from:{number},status_code:201."
        required: false
        type: "string"
        x-exportParamName: "Q"
        x-optionalDataType: "String"
      - name: "date_from"
        in: "query"
        description: "Start date"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "DateFrom"
        x-optionalDataType: "Int32"
      - name: "date_to"
        in: "query"
        description: "End date"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "DateTo"
        x-optionalDataType: "Int32"
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /delivery-issues:
    get:
      tags:
      - "Delivery Issues"
      summary: "Get all delivery issues"
      description: "Get all delivery issues"
      operationId: "DeliveryIssuesGet"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    post:
      tags:
      - "Delivery Issues"
      summary: "Create delivery Issue"
      description: "Create delivery Issue"
      operationId: "DeliveryIssuesPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "delivery-issue"
        description: "DeliveryIssue model"
        required: true
        schema:
          $ref: "#/definitions/DeliveryIssue"
        x-exportParamName: "DeliveryIssue"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /post/letters/detect-address:
    post:
      tags:
      - "Detect Address"
      summary: "Detects address in uploaded file."
      description: "Detects address in uploaded file."
      operationId: "DetectAddressPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "uploadFile"
        description: "Your file to be uploaded"
        required: true
        schema:
          $ref: "#/definitions/UploadFile"
        x-exportParamName: "UploadFile"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /timezones:
    get:
      tags:
      - "Timezones"
      summary: "Get supported list of timezones."
      description: "Get supported list of timezones."
      operationId: "TimezonesGet"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /email/send:
    post:
      tags:
      - "Transactional Email"
      summary: "Send transactional email"
      description: "Send transactional email"
      operationId: "EmailSendPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "email"
        description: "Email model"
        required: true
        schema:
          $ref: "#/definitions/Email"
        x-exportParamName: "Email"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /email/price:
    post:
      tags:
      - "Transactional Email"
      summary: "Get transactional email price"
      description: "Get transactional email price"
      operationId: "EmailPricePost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "email"
        description: "Email model"
        required: true
        schema:
          $ref: "#/definitions/Email"
        x-exportParamName: "Email"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /email/history:
    get:
      tags:
      - "Transactional Email"
      summary: "Get all transactional email history"
      description: "Get all transactional email history"
      operationId: "EmailHistoryGet"
      produces:
      - "application/json"
      parameters:
      - name: "date_from"
        in: "query"
        description: "Start date"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "DateFrom"
        x-optionalDataType: "Int32"
      - name: "date_to"
        in: "query"
        description: "End date"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "DateTo"
        x-optionalDataType: "Int32"
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /email/history/export:
    get:
      tags:
      - "Transactional Email"
      summary: "Export all Transactional Email history"
      description: "Export all Transactional Email history"
      operationId: "EmailHistoryExportGet"
      produces:
      - "application/json"
      parameters:
      - name: "filename"
        in: "query"
        description: "Filename to download history as"
        required: true
        type: "string"
        x-exportParamName: "Filename"
      - name: "date_from"
        in: "query"
        description: "Start date"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "DateFrom"
        x-optionalDataType: "Int32"
      - name: "date_to"
        in: "query"
        description: "End date"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "DateTo"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /email/addresses:
    get:
      tags:
      - "Email Marketing"
      summary: "Get all email addresses"
      description: "Get all email addresses"
      operationId: "AllowedEmailAddressGet"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    post:
      tags:
      - "Email Marketing"
      summary: "Create allowed Email Address"
      description: "Create allowed Email Address"
      operationId: "AllowedEmailAddressPost"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "emailAddress"
        required: false
        schema:
          $ref: "#/definitions/emailAddress"
        x-exportParamName: "EmailAddress"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /email/address-verify/{email_address_id}/send:
    put:
      tags:
      - "Email Marketing"
      summary: "Send verification token"
      description: "Send verification token"
      operationId: "SendVerificationTokenGet"
      produces:
      - "application/json"
      parameters:
      - name: "email_address_id"
        in: "path"
        description: "Allowed email address id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "EmailAddressId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /email/address-verify/{email_address_id}/verify/{activation_token}:
    put:
      tags:
      - "Email Marketing"
      summary: "Verify email address using verification token"
      description: "Verify email address using verification token"
      operationId: "VerifyAllowedEmailAddressGet"
      produces:
      - "application/json"
      parameters:
      - name: "email_address_id"
        in: "path"
        description: "Allowed email address id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "EmailAddressId"
      - name: "activation_token"
        in: "path"
        description: "Your activation token."
        required: true
        type: "string"
        x-exportParamName: "ActivationToken"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /email/addresses/{email_address_id}:
    get:
      tags:
      - "Email Marketing"
      summary: "Get specific email address"
      description: "Get specific email address"
      operationId: "SpecificAllowedEmailAddressGet"
      produces:
      - "application/json"
      parameters:
      - name: "email_address_id"
        in: "path"
        description: "Allowed email address id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "EmailAddressId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    delete:
      tags:
      - "Email Marketing"
      summary: "Delete specific email address"
      description: "Delete specific email address"
      operationId: "SpecificAllowedEmailAddressDelete"
      produces:
      - "application/json"
      parameters:
      - name: "email_address_id"
        in: "path"
        description: "Allowed email address id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "EmailAddressId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /email-campaigns:
    get:
      tags:
      - "Email Marketing"
      summary: "Get all email campaigns"
      description: "Get all email campaigns"
      operationId: "EmailCampaignsGet"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /email-campaigns/{email_campaign_id}:
    get:
      tags:
      - "Email Marketing"
      summary: "Get specific email campaign"
      description: "Get specific email campaign"
      operationId: "EmailCampaignGet"
      produces:
      - "application/json"
      parameters:
      - name: "email_campaign_id"
        in: "path"
        description: "Allowed email campaign id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "EmailCampaignId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    put:
      tags:
      - "Email Marketing"
      summary: "Edit email campaign"
      description: "Edit email campaign"
      operationId: "EmailCampaignPut"
      produces:
      - "application/json"
      parameters:
      - name: "email_campaign_id"
        in: "path"
        description: "Allowed email campaign id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "EmailCampaignId"
      - in: "body"
        name: "email-campaign"
        description: "Email model"
        required: true
        schema:
          $ref: "#/definitions/EmailCampaign"
        x-exportParamName: "EmailCampaign"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /email-campaigns/send:
    post:
      tags:
      - "Email Marketing"
      summary: "Send email campaign"
      description: "Send email campaign"
      operationId: "EmailCampaignPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "email-campaign"
        description: "Email model"
        required: true
        schema:
          $ref: "#/definitions/EmailCampaign"
        x-exportParamName: "EmailCampaign"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /email-campaigns/{email_campaign_id}/cancel:
    put:
      tags:
      - "Email Marketing"
      summary: "Cancel email campaign"
      description: "Cancel email campaign"
      operationId: "CancelEmailCampaignPut"
      produces:
      - "application/json"
      parameters:
      - name: "email_campaign_id"
        in: "path"
        description: "Allowed email campaign id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "EmailCampaignId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /email-campaigns/price:
    post:
      tags:
      - "Email Marketing"
      summary: "Calculate email campaign price"
      description: "Calculate email campaign price"
      operationId: "EmailCampaignPricePost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "email-campaign"
        description: "Email model"
        required: true
        schema:
          $ref: "#/definitions/EmailCampaign"
        x-exportParamName: "EmailCampaign"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /email-campaigns/{email_campaign_id}/history:
    get:
      tags:
      - "Email Marketing"
      summary: "Get specific email campaign history"
      description: "Get specific email campaign history"
      operationId: "EmailCampaignHistoryGet"
      produces:
      - "application/json"
      parameters:
      - name: "email_campaign_id"
        in: "path"
        description: "Allowed email campaign id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "EmailCampaignId"
      - name: "date_from"
        in: "query"
        description: "Start date"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "DateFrom"
        x-optionalDataType: "Int32"
      - name: "date_to"
        in: "query"
        description: "End date"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "DateTo"
        x-optionalDataType: "Int32"
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /email-campaigns/{email_campaign_id}/history/export:
    get:
      tags:
      - "Email Marketing"
      summary: "Export specific email campaign history"
      description: "Export specific email campaign history"
      operationId: "EmailCampaignHistoryExportGet"
      produces:
      - "application/json"
      parameters:
      - name: "email_campaign_id"
        in: "path"
        description: "Allowed email campaign id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "EmailCampaignId"
      - name: "date_from"
        in: "query"
        description: "Start date"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "DateFrom"
        x-optionalDataType: "Int32"
      - name: "date_to"
        in: "query"
        description: "End date"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "DateTo"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /email/templates:
    get:
      tags:
      - "User Email Templates"
      summary: "Get all user email templates"
      description: "Get all user email templates"
      operationId: "EmailTemplatesGet"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    post:
      tags:
      - "User Email Templates"
      summary: "Create email template"
      description: "Create email template"
      operationId: "EmailTemplatePost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "email-template"
        description: "Email template model"
        required: true
        schema:
          $ref: "#/definitions/EmailTemplateNew"
        x-exportParamName: "EmailTemplate"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /email/templates/{template_id}:
    get:
      tags:
      - "User Email Templates"
      summary: "Get specific user email template"
      description: "Get specific user email templates"
      operationId: "EmailTemplateGet"
      produces:
      - "application/json"
      parameters:
      - name: "template_id"
        in: "path"
        description: "Email template id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "TemplateId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    put:
      tags:
      - "User Email Templates"
      summary: "Update email template"
      description: "Update email template"
      operationId: "EmailTemplatePut"
      produces:
      - "application/json"
      parameters:
      - name: "template_id"
        in: "path"
        description: "Email template id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "TemplateId"
      - in: "body"
        name: "email-template"
        description: "Email template model"
        required: true
        schema:
          $ref: "#/definitions/EmailTemplateUpdate"
        x-exportParamName: "EmailTemplate"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    delete:
      tags:
      - "User Email Templates"
      summary: "Delete user email template"
      description: "Delete user email template"
      operationId: "EmailTemplateDelete"
      produces:
      - "application/json"
      parameters:
      - name: "template_id"
        in: "path"
        description: "Email template id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "TemplateId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /email/master-templates:
    get:
      tags:
      - "Master Email Templates"
      summary: "Get all master email templates"
      description: "Get all master email templates"
      operationId: "MasterEmailTemplatesGet"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /email/master-templates/{template_id}:
    get:
      tags:
      - "Master Email Templates"
      summary: "Get specific master email template"
      description: "Get specific master email template"
      operationId: "MasterEmailTemplateGet"
      produces:
      - "application/json"
      parameters:
      - name: "template_id"
        in: "path"
        description: "Email template id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "TemplateId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /email/master-templates-categories:
    get:
      tags:
      - "Master Email Templates"
      summary: "Get all master email template categories"
      description: "Get all master email template categories"
      operationId: "MasterEmailTemplateCategoriesGet"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /email/master-templates-categories/{category_id}:
    get:
      tags:
      - "Master Email Templates"
      summary: "Get specific master email template category"
      description: "Get specific master email template category"
      operationId: "MasterEmailTemplateCategoryGet"
      produces:
      - "application/json"
      parameters:
      - name: "category_id"
        in: "path"
        description: "Email category id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "CategoryId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /email/master-templates-categories/{category_id}/master-templates:
    get:
      tags:
      - "Master Email Templates"
      summary: "Get all master email templates in a category"
      description: "Get all master email templates in a category"
      operationId: "MasterEmailTemplatesInCategoryGet"
      produces:
      - "application/json"
      parameters:
      - name: "category_id"
        in: "path"
        description: "Email category id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "CategoryId"
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /automations/sms/inbound:
    get:
      tags:
      - "Inbound SMS Rules"
      summary: "Get all inbound sms automations"
      description: "Get all inbound sms automations"
      operationId: "SmsInboundAutomationsGet"
      produces:
      - "application/json"
      parameters:
      - name: "q"
        in: "query"
        description: "Your keyword or query."
        required: false
        type: "string"
        x-exportParamName: "Q"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    post:
      tags:
      - "Inbound SMS Rules"
      summary: "Create new inbound sms automation"
      description: "Create new inbound sms automation"
      operationId: "SmsInboundAutomationPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "inbound-sms-rule"
        description: "Inbound sms rule model"
        required: true
        schema:
          $ref: "#/definitions/InboundSMSRule"
        x-exportParamName: "InboundSmsRule"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /automations/sms/inbound/{inbound_rule_id}:
    get:
      tags:
      - "Inbound SMS Rules"
      summary: "Get specific inbound sms automation"
      description: "Get specific inbound sms automation"
      operationId: "SmsInboundAutomationGet"
      produces:
      - "application/json"
      parameters:
      - name: "inbound_rule_id"
        in: "path"
        description: "Inbound rule id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "InboundRuleId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    put:
      tags:
      - "Inbound SMS Rules"
      summary: "Update inbound sms automation"
      description: "Update inbound sms automation"
      operationId: "SmsInboundAutomationPut"
      produces:
      - "application/json"
      parameters:
      - name: "inbound_rule_id"
        in: "path"
        description: "Inbound rule id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "InboundRuleId"
      - in: "body"
        name: "inbound-sms-rule"
        description: "Inbound sms rule model"
        required: true
        schema:
          $ref: "#/definitions/InboundSMSRule"
        x-exportParamName: "InboundSmsRule"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    delete:
      tags:
      - "Inbound SMS Rules"
      summary: "Delete inbound sms automation"
      description: "Delete inbound sms automation"
      operationId: "SmsInboundAutomationDelete"
      produces:
      - "application/json"
      parameters:
      - name: "inbound_rule_id"
        in: "path"
        description: "Inbound rule id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "InboundRuleId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /automations/sms/receipts:
    get:
      tags:
      - "SMS Delivery Receipt Rules"
      summary: "Get all sms delivery receipt automations"
      description: "Get all sms delivery receipt automations"
      operationId: "SmsDeliveryReceiptAutomationsGet"
      produces:
      - "application/json"
      parameters:
      - name: "q"
        in: "query"
        description: "Your keyword or query."
        required: false
        type: "string"
        x-exportParamName: "Q"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    post:
      tags:
      - "SMS Delivery Receipt Rules"
      summary: "Create sms delivery receipt automations"
      description: "Create sms delivery receipt automations"
      operationId: "SmsDeliveryReceiptAutomationPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "delivery-receipt-rule"
        description: "sms delivery receipt rule model"
        required: true
        schema:
          $ref: "#/definitions/DeliveryReceiptRule"
        x-exportParamName: "DeliveryReceiptRule"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /automations/sms/receipts/{receipt_rule_id}:
    get:
      tags:
      - "SMS Delivery Receipt Rules"
      summary: "Get specific sms delivery receipt automation"
      description: "Get specific sms delivery receipt automation"
      operationId: "SmsDeliveryReceiptAutomationGet"
      produces:
      - "application/json"
      parameters:
      - name: "receipt_rule_id"
        in: "path"
        description: "Receipt rule id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ReceiptRuleId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    put:
      tags:
      - "SMS Delivery Receipt Rules"
      summary: "Update sms delivery receipt automation"
      description: "Update sms delivery receipt automation"
      operationId: "SmsDeliveryReceiptAutomationPut"
      produces:
      - "application/json"
      parameters:
      - name: "receipt_rule_id"
        in: "path"
        description: "Receipt rule id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ReceiptRuleId"
      - in: "body"
        name: "delivery-receipt-rule"
        description: "Delivery receipt rule model"
        required: true
        schema:
          $ref: "#/definitions/DeliveryReceiptRule"
        x-exportParamName: "DeliveryReceiptRule"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    delete:
      tags:
      - "SMS Delivery Receipt Rules"
      summary: "Delete sms delivery receipt automation"
      description: "Delete sms delivery receipt automation"
      operationId: "SmsDeliveryReceiptAutomationDelete"
      produces:
      - "application/json"
      parameters:
      - name: "receipt_rule_id"
        in: "path"
        description: "Receipt rule id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ReceiptRuleId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /automations/fax/inbound:
    get:
      tags:
      - "Inbound FAX Rules"
      summary: "Get all inbound fax automations"
      description: "Get all inbound fax automations"
      operationId: "FaxInboundAutomationsGet"
      produces:
      - "application/json"
      parameters:
      - name: "q"
        in: "query"
        description: "Your keyword or query."
        required: false
        type: "string"
        x-exportParamName: "Q"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    post:
      tags:
      - "Inbound FAX Rules"
      summary: "Create new inbound fax automation"
      description: "Create new inbound fax automation"
      operationId: "FaxInboundAutomationPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "inbound-fax-rule"
        description: "Inbound fax rule model"
        required: true
        schema:
          $ref: "#/definitions/InboundFaxRule"
        x-exportParamName: "InboundFaxRule"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /automations/fax/inbound/{inbound_rule_id}:
    get:
      tags:
      - "Inbound FAX Rules"
      summary: "Get specific inbound fax automation"
      description: "Get specific inbound fax automation"
      operationId: "FaxInboundAutomationGet"
      produces:
      - "application/json"
      parameters:
      - name: "inbound_rule_id"
        in: "path"
        description: "Inbound rule id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "InboundRuleId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    put:
      tags:
      - "Inbound FAX Rules"
      summary: "Update inbound fax automation"
      description: "Update inbound fax automation"
      operationId: "FaxInboundAutomationPut"
      produces:
      - "application/json"
      parameters:
      - name: "inbound_rule_id"
        in: "path"
        description: "Inbound rule id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "InboundRuleId"
      - in: "body"
        name: "inbound-fax-rule"
        description: "Inbound fax rule model"
        required: true
        schema:
          $ref: "#/definitions/InboundFaxRule"
        x-exportParamName: "InboundFaxRule"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    delete:
      tags:
      - "Inbound FAX Rules"
      summary: "Delete inbound fax automation"
      description: "Delete inbound fax automation"
      operationId: "FaxInboundAutomationDelete"
      produces:
      - "application/json"
      parameters:
      - name: "inbound_rule_id"
        in: "path"
        description: "Inbound rule id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "InboundRuleId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /automations/fax/receipts:
    get:
      tags:
      - "FAX Delivery Receipt Rules"
      summary: "Get all fax delivery receipt automations"
      description: "Get all fax delivery receipt automations"
      operationId: "FaxDeliveryReceiptAutomationsGet"
      produces:
      - "application/json"
      parameters:
      - name: "q"
        in: "query"
        description: "Your keyword or query."
        required: false
        type: "string"
        x-exportParamName: "Q"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    post:
      tags:
      - "FAX Delivery Receipt Rules"
      summary: "Create fax delivery receipt automations"
      description: "Create fax delivery receipt automations"
      operationId: "FaxDeliveryReceiptAutomationPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "delivery-receipt-rule"
        description: "fax delivery receipt rule model"
        required: true
        schema:
          $ref: "#/definitions/DeliveryReceiptRule"
        x-exportParamName: "DeliveryReceiptRule"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /automations/fax/receipts/{receipt_rule_id}:
    get:
      tags:
      - "FAX Delivery Receipt Rules"
      summary: "Get specific fax delivery receipt automation"
      description: "Get specific fax delivery receipt automation"
      operationId: "FaxDeliveryReceiptAutomationGet"
      produces:
      - "application/json"
      parameters:
      - name: "receipt_rule_id"
        in: "path"
        description: "Receipt rule id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ReceiptRuleId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    put:
      tags:
      - "FAX Delivery Receipt Rules"
      summary: "Update fax delivery receipt automation"
      description: "Update fax delivery receipt automation"
      operationId: "FaxDeliveryReceiptAutomationPut"
      produces:
      - "application/json"
      parameters:
      - name: "receipt_rule_id"
        in: "path"
        description: "Receipt rule id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ReceiptRuleId"
      - in: "body"
        name: "delivery-receipt-rule"
        description: "Delivery receipt rule model"
        required: true
        schema:
          $ref: "#/definitions/DeliveryReceiptRule"
        x-exportParamName: "DeliveryReceiptRule"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    delete:
      tags:
      - "FAX Delivery Receipt Rules"
      summary: "Delete fax delivery receipt automation"
      description: "Delete fax delivery receipt automation"
      operationId: "FaxDeliveryReceiptAutomationDelete"
      produces:
      - "application/json"
      parameters:
      - name: "receipt_rule_id"
        in: "path"
        description: "Receipt rule id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ReceiptRuleId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /automations/voice/receipts:
    get:
      tags:
      - "Voice Delivery Receipt Rules"
      summary: "Get all voice delivery receipt automations"
      description: "Get all voice delivery receipt automations"
      operationId: "VoiceDeliveryReceiptAutomationsGet"
      produces:
      - "application/json"
      parameters:
      - name: "q"
        in: "query"
        description: "Your keyword or query."
        required: false
        type: "string"
        x-exportParamName: "Q"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    post:
      tags:
      - "Voice Delivery Receipt Rules"
      summary: "Create voice delivery receipt automations"
      description: "Create voice delivery receipt automations"
      operationId: "VoiceDeliveryReceiptAutomationPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "delivery-receipt-rule"
        description: "voice delivery receipt rule model"
        required: true
        schema:
          $ref: "#/definitions/DeliveryReceiptRule"
        x-exportParamName: "DeliveryReceiptRule"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /automations/voice/receipts/{receipt_rule_id}:
    get:
      tags:
      - "Voice Delivery Receipt Rules"
      summary: "Get specific voice delivery receipt automation"
      description: "Get specific voice delivery receipt automation"
      operationId: "VoiceDeliveryReceiptAutomationGet"
      produces:
      - "application/json"
      parameters:
      - name: "receipt_rule_id"
        in: "path"
        description: "Receipt rule id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ReceiptRuleId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    put:
      tags:
      - "Voice Delivery Receipt Rules"
      summary: "Update voice delivery receipt automation"
      description: "Update voice delivery receipt automation"
      operationId: "VoiceDeliveryReceiptAutomationPut"
      produces:
      - "application/json"
      parameters:
      - name: "receipt_rule_id"
        in: "path"
        description: "Receipt rule id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ReceiptRuleId"
      - in: "body"
        name: "delivery-receipt-rule"
        description: "Delivery receipt rule model"
        required: true
        schema:
          $ref: "#/definitions/DeliveryReceiptRule"
        x-exportParamName: "DeliveryReceiptRule"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    delete:
      tags:
      - "Voice Delivery Receipt Rules"
      summary: "Delete voice delivery receipt automation"
      description: "Delete voice delivery receipt automation"
      operationId: "VoiceDeliveryReceiptAutomationDelete"
      produces:
      - "application/json"
      parameters:
      - name: "receipt_rule_id"
        in: "path"
        description: "Receipt rule id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ReceiptRuleId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /automations/email/receipts:
    get:
      tags:
      - "Email Delivery Receipt Rules"
      summary: "Get all email delivery receipt automations"
      description: "Get all email delivery receipt automations"
      operationId: "EmailDeliveryReceiptAutomationsGet"
      produces:
      - "application/json"
      parameters:
      - name: "q"
        in: "query"
        description: "Your keyword or query."
        required: false
        type: "string"
        x-exportParamName: "Q"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "Page number"
        required: false
        type: "integer"
        default: 1
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Number of records per page"
        required: false
        type: "integer"
        default: 10
        exclusiveMaximum: false
        minimum: 1
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    post:
      tags:
      - "Email Delivery Receipt Rules"
      summary: "Create email delivery receipt automations"
      description: "Create email delivery receipt automations"
      operationId: "EmailDeliveryReceiptAutomationPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "delivery-receipt-rule"
        description: "Email delivery receipt rule model"
        required: true
        schema:
          $ref: "#/definitions/DeliveryReceiptRule"
        x-exportParamName: "DeliveryReceiptRule"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
  /automations/email/receipts/{receipt_rule_id}:
    get:
      tags:
      - "Email Delivery Receipt Rules"
      summary: "Get specific email delivery receipt automation"
      description: "Get specific email delivery receipt automation"
      operationId: "EmailDeliveryReceiptAutomationGet"
      produces:
      - "application/json"
      parameters:
      - name: "receipt_rule_id"
        in: "path"
        description: "Receipt rule id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ReceiptRuleId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    put:
      tags:
      - "Email Delivery Receipt Rules"
      summary: "Update email delivery receipt automation"
      description: "Update email delivery receipt automation"
      operationId: "EmailDeliveryReceiptAutomationPut"
      produces:
      - "application/json"
      parameters:
      - name: "receipt_rule_id"
        in: "path"
        description: "Receipt rule id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ReceiptRuleId"
      - in: "body"
        name: "delivery-receipt-rule"
        description: "Delivery receipt rule model"
        required: true
        schema:
          $ref: "#/definitions/DeliveryReceiptRule"
        x-exportParamName: "DeliveryReceiptRule"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
    delete:
      tags:
      - "Email Delivery Receipt Rules"
      summary: "Delete email delivery receipt automation"
      description: "Delete email delivery receipt automation"
      operationId: "EmailDeliveryReceiptAutomationDelete"
      produces:
      - "application/json"
      parameters:
      - name: "receipt_rule_id"
        in: "path"
        description: "Receipt rule id"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "ReceiptRuleId"
      responses:
        200:
          description: "SUCCESS"
          schema:
            type: "string"
        400:
          description: "BAD_REQUEST"
          schema:
            type: "string"
        401:
          description: "UNAUTHORIZED"
          schema:
            type: "string"
        403:
          description: "FORBIDDEN"
          schema:
            type: "string"
        404:
          description: "NOT_FOUND"
          schema:
            type: "string"
        405:
          description: "METHOD_NOT_FOUND"
          schema:
            type: "string"
        429:
          description: "TOO_MANY_REQUESTS"
          schema:
            type: "string"
        default:
          description: "INTERNAL_SERVER_ERROR"
          schema:
            type: "string"
      security:
      - BasicAuth: []
securityDefinitions:
  BasicAuth:
    type: "basic"
    x-testValue: []
    x-skip-client-authentication: false
definitions:
  SmsCampaign:
    type: "object"
    required:
    - "body"
    - "list_id"
    - "name"
    discriminator: "classType"
    properties:
      list_id:
        type: "integer"
        format: "int32"
        description: "Your list id."
      name:
        type: "string"
        description: "Your campaign name."
      body:
        type: "string"
        description: "Your campaign message."
      from:
        type: "string"
        description: "Your sender id - more info: http://help.clicksend.com/SMS/what-is-a-sender-id-or-sender-number."
      schedule:
        type: "integer"
        format: "int32"
        example: 0
        description: "Your schedule timestamp."
        default: 0
    description: "Campaign Model for SMS"
    example:
      schedule: 0
      list_id: 0
      name: "name"
      from: "from"
      body: "body"
  MmsCampaign:
    type: "object"
    required:
    - "body"
    - "list_id"
    - "media_file"
    - "name"
    - "subject"
    discriminator: "classType"
    properties:
      list_id:
        type: "integer"
        format: "int32"
        description: "Your list id."
      name:
        type: "string"
        description: "Your campaign name."
      body:
        type: "string"
        description: "Your campaign message."
      from:
        type: "string"
        description: "Your sender id - more info: http://help.clicksend.com/SMS/what-is-a-sender-id-or-sender-number."
      schedule:
        type: "integer"
        format: "int32"
        example: 0
        description: "Your schedule timestamp."
        default: 0
      subject:
        type: "string"
        description: "Subject of MMS campaign."
      media_file:
        type: "string"
        description: "URL pointing to media file."
    description: "Campaign Model for MMS"
    example:
      schedule: 0
      list_id: 0
      subject: "subject"
      name: "name"
      from: "from"
      body: "body"
      media_file: "media_file"
  Address:
    type: "object"
    required:
    - "address_city"
    - "address_country"
    - "address_line_1"
    - "address_name"
    - "address_postal_code"
    discriminator: "classType"
    properties:
      address_name:
        type: "string"
        description: "Your address name."
      address_line_1:
        type: "string"
        description: "Your address line 1"
      address_city:
        type: "string"
        description: "Your city"
      address_postal_code:
        type: "string"
        description: "Your postal code"
      address_country:
        type: "string"
        description: "Your country"
      address_line_2:
        type: "string"
        description: "Your address line 2"
      address_state:
        type: "string"
        description: "Your state"
    description: "Base model for all address-related objects."
    example:
      address_postal_code: "address_postal_code"
      address_country: "address_country"
      address_line_1: "address_line_1"
      address_state: "address_state"
      address_name: "address_name"
      address_line_2: "address_line_2"
      address_city: "address_city"
  SmsMessageCollection:
    type: "object"
    required:
    - "messages"
    discriminator: "classType"
    properties:
      messages:
        type: "array"
        description: "Array of SmsMessage items"
        items:
          $ref: "#/definitions/SmsMessage"
    description: "Array of SmsMessage items"
    example:
      messages:
      - schedule: 0
        country: "country"
        from_email: "from_email"
        list_id: 0
        from: "from"
        to: "69505609"
        source: "sdk"
        body: "body"
        custom_string: "custom_string"
      - schedule: 0
        country: "country"
        from_email: "from_email"
        list_id: 0
        from: "from"
        to: "69505609"
        source: "sdk"
        body: "body"
        custom_string: "custom_string"
  SmsMessage:
    type: "object"
    required:
    - "body"
    - "to"
    discriminator: "classType"
    properties:
      from:
        type: "string"
        description: "Your sender id - more info: http://help.clicksend.com/SMS/what-is-a-sender-id-or-sender-number."
      body:
        type: "string"
        description: "Your message."
      to:
        type: "string"
        example: "69505609"
        description: "Recipient phone number in E.164 format."
      source:
        type: "string"
        example: "sdk"
        description: "Your method of sending e.g. 'wordpress', 'php', 'c#'."
        default: "sdk"
      schedule:
        type: "integer"
        format: "int32"
        example: 0
        description: "Leave blank for immediate delivery. Your schedule time in unix\
          \ format http://help.clicksend.com/what-is-a-unix-timestamp"
        default: 0
      custom_string:
        type: "string"
        description: "Your reference. Will be passed back with all replies and delivery\
          \ reports."
      list_id:
        type: "integer"
        format: "int32"
        description: "Your list ID if sending to a whole list. Can be used instead\
          \ of 'to'."
      country:
        type: "string"
        description: "Recipient country."
      from_email:
        type: "string"
        description: "An email address where the reply should be emailed to. If omitted,\
          \ the reply will be emailed back to the user who sent the outgoing SMS."
    description: "SmsMessage model"
    example:
      schedule: 0
      country: "country"
      from_email: "from_email"
      list_id: 0
      from: "from"
      to: "69505609"
      source: "sdk"
      body: "body"
      custom_string: "custom_string"
  Account:
    type: "object"
    required:
    - "account_name"
    - "country"
    - "password"
    - "user_email"
    - "user_first_name"
    - "user_last_name"
    - "user_phone"
    - "username"
    discriminator: "classType"
    properties:
      username:
        type: "string"
        description: "Your username"
      password:
        type: "string"
        description: "Your password"
      user_phone:
        type: "string"
        description: "Your phone number in E.164 format."
      user_email:
        type: "string"
        description: "Your email"
      user_first_name:
        type: "string"
        description: "Your first name"
      user_last_name:
        type: "string"
        description: "Your last name"
      account_name:
        type: "string"
        description: "Your delivery to value."
      country:
        type: "string"
        description: "Your country"
    description: "Complete account details needed for the user."
    example:
      country: "country"
      password: "password"
      user_email: "user_email"
      user_first_name: "user_first_name"
      user_last_name: "user_last_name"
      account_name: "account_name"
      user_phone: "user_phone"
      username: "username"
  Contact:
    type: "object"
    required:
    - "custom_1"
    - "phone_number"
    discriminator: "classType"
    properties:
      phone_number:
        type: "string"
        description: "Your phone number in E.164 format. Must be provided if no fax\
          \ number or email."
      custom_1:
        type: "string"
        description: ""
      email:
        type: "string"
        description: "Your email. Must be provided if no phone number or fax number."
      fax_number:
        type: "string"
        description: "Your fax number. Must be provided if no phone number or email."
      first_name:
        type: "string"
        description: "Your first name."
      address_line_1:
        type: "string"
        description: "Your street address"
      address_line_2:
        type: "string"
        description: ""
      address_city:
        type: "string"
        description: "Your nearest city"
      address_state:
        type: "string"
        description: "Your current state"
      address_postal_code:
        type: "string"
        description: "Your current postcode"
      address_country:
        type: "string"
        description: "Your current country"
      organization_name:
        type: "string"
        description: "Your organisation name"
      custom_2:
        type: "string"
        description: ""
      custom_3:
        type: "string"
        description: ""
      custom_4:
        type: "string"
        description: ""
      last_name:
        type: "string"
        description: "Your last name"
    description: "Contains all details for the main contact."
    example:
      custom_1: "custom_1"
      custom_3: "custom_3"
      address_postal_code: "address_postal_code"
      custom_2: "custom_2"
      address_country: "address_country"
      custom_4: "custom_4"
      address_state: "address_state"
      last_name: "last_name"
      organization_name: "organization_name"
      fax_number: "fax_number"
      address_city: "address_city"
      address_line_1: "address_line_1"
      phone_number: "phone_number"
      address_line_2: "address_line_2"
      first_name: "first_name"
      email: "email"
  Fields:
    type: "object"
    discriminator: "classType"
    properties:
      fields:
        $ref: "#/definitions/Fields_fields"
    description: "Contains all details for the main contact."
    example:
      fields:
        custom_1: "custom_1"
        custom_3: "custom_3"
        address_postal_code: "address_postal_code"
        custom_2: "custom_2"
        address_country: "address_country"
        custom_4: "custom_4"
        address_state: "address_state"
        last_name: "last_name"
        organization_name: "organization_name"
        fax_number: "fax_number"
        address_city: "address_city"
        address_line_1: "address_line_1"
        phone_number: "phone_number"
        address_line_2: "address_line_2"
        first_name: "first_name"
        email: "email"
  PostLetter:
    type: "object"
    required:
    - "file_url"
    - "recipients"
    discriminator: "classType"
    properties:
      file_url:
        type: "string"
        description: "URL of file to send"
      priority_post:
        type: "integer"
        format: "int32"
        example: 0
        description: "Whether letter is priority"
        default: 0
      recipients:
        type: "array"
        description: "Array of PostRecipient models"
        items:
          $ref: "#/definitions/PostRecipient"
      template_used:
        type: "integer"
        format: "int32"
        example: 0
        description: "Whether using our template"
        default: 0
      duplex:
        type: "integer"
        format: "int32"
        example: 0
        description: "Whether letter is duplex"
        default: 0
      colour:
        type: "integer"
        format: "int32"
        example: 0
        description: "Whether letter is in colour"
        default: 0
      source:
        type: "string"
        example: "sdk"
        description: "Source being sent from"
        default: "sdk"
    description: "PostLetter model"
    example:
      file_url: "file_url"
      colour: 0
      recipients:
      - return_address_id: 0
        schedule: 0
        address_postal_code: "address_postal_code"
        address_country: "address_country"
        address_line_1: "address_line_1"
        address_state: "address_state"
        address_name: "address_name"
        address_line_2: "address_line_2"
        address_city: "address_city"
      - return_address_id: 0
        schedule: 0
        address_postal_code: "address_postal_code"
        address_country: "address_country"
        address_line_1: "address_line_1"
        address_state: "address_state"
        address_name: "address_name"
        address_line_2: "address_line_2"
        address_city: "address_city"
      template_used: 0
      duplex: 0
      source: "sdk"
      priority_post: 0
  PostRecipient:
    type: "object"
    required:
    - "address_city"
    - "address_country"
    - "address_line_1"
    - "address_name"
    - "address_postal_code"
    - "address_state"
    - "return_address_id"
    discriminator: "classType"
    properties:
      address_name:
        type: "string"
        description: "Name of address"
      address_line_1:
        type: "string"
        description: "First line of address"
      address_line_2:
        type: "string"
        description: "Second line of address"
      address_city:
        type: "string"
        description: "City"
      address_state:
        type: "string"
        description: "State"
      address_postal_code:
        type: "string"
        description: "Postal code"
      address_country:
        type: "string"
        description: "Country"
      return_address_id:
        type: "integer"
        format: "int32"
        description: "ID of return address to use"
      schedule:
        type: "integer"
        format: "int32"
        example: 0
        description: "When to send letter (0/null=now)"
        default: 0
    description: "PostRecipient model"
    example:
      return_address_id: 0
      schedule: 0
      address_postal_code: "address_postal_code"
      address_country: "address_country"
      address_line_1: "address_line_1"
      address_state: "address_state"
      address_name: "address_name"
      address_line_2: "address_line_2"
      address_city: "address_city"
  FaxMessage:
    type: "object"
    required:
    - "to"
    discriminator: "classType"
    properties:
      source:
        type: "string"
        example: "sdk"
        description: "Your method of sending e.g. 'wordpress', 'php', 'c#'."
        default: "sdk"
      to:
        type: "string"
        description: "Recipient fax number in E.164 format."
      list_id:
        type: "integer"
        format: "int32"
        description: "Your list ID if sending to a whole list. Can be used instead\
          \ of 'to'."
      from:
        type: "string"
        description: "Your sender id. Must be a valid fax number."
      schedule:
        type: "integer"
        format: "int32"
        description: "Leave blank for immediate delivery. Your schedule time in unix\
          \ format http://help.clicksend.com/what-is-a-unix-timestamp"
      custom_string:
        type: "string"
        description: "Your reference. Will be passed back with all replies and delivery\
          \ reports."
      country:
        type: "string"
        description: "Recipient country."
      from_email:
        type: "string"
        description: "An email address where the reply should be emailed to."
    description: "Base model for Fax Messages"
    example:
      schedule: 6
      country: "country"
      from_email: "from_email"
      list_id: 0
      from: "from"
      source: "sdk"
      to: "to"
      custom_string: "custom_string"
  MmsMessageCollection:
    type: "object"
    required:
    - "media_file"
    - "messages"
    discriminator: "classType"
    properties:
      media_file:
        type: "string"
        description: "Media file you want to send"
      messages:
        type: "array"
        description: "Array of MmsMessage models"
        items:
          $ref: "#/definitions/MmsMessage"
    description: "Array of MmsMessage items"
    example:
      messages:
      - country: "country"
        schedule: 0
        from_email: "from_email"
        list_id: 0
        subject: "subject"
        from: "from"
        to: "69505609"
        source: "sdk"
        body: "body"
        custom_string: "custom_string"
      - country: "country"
        schedule: 0
        from_email: "from_email"
        list_id: 0
        subject: "subject"
        from: "from"
        to: "69505609"
        source: "sdk"
        body: "body"
        custom_string: "custom_string"
      media_file: "media_file"
  MmsMessage:
    type: "object"
    required:
    - "body"
    - "subject"
    - "to"
    discriminator: "classType"
    properties:
      to:
        type: "string"
        example: "69505609"
        description: "Recipient phone number in E.164 format"
      body:
        type: "string"
        description: "Your message"
      subject:
        type: "string"
        description: "Subject line (max 20 characters)"
      from:
        type: "string"
        description: "Your sender ID"
      country:
        type: "string"
        description: "Recipient country"
      source:
        type: "string"
        example: "sdk"
        description: "Your method of sending"
        default: "sdk"
      list_id:
        type: "integer"
        format: "int32"
        description: "Your list ID if sending to a whole list (can be used instead\
          \ of 'to')"
      schedule:
        type: "integer"
        format: "int32"
        example: 0
        description: "Schedule time in unix format (leave blank for immediate delivery)"
        default: 0
      custom_string:
        type: "string"
        description: "Custom string for your reference"
      from_email:
        type: "string"
        description: "Email to send replies to"
    description: "Single MMS message model"
    example:
      country: "country"
      schedule: 0
      from_email: "from_email"
      list_id: 0
      subject: "subject"
      from: "from"
      to: "69505609"
      source: "sdk"
      body: "body"
      custom_string: "custom_string"
  PostPostcard:
    type: "object"
    required:
    - "file_urls"
    - "recipients"
    discriminator: "classType"
    properties:
      file_urls:
        type: "array"
        description: "Postcard file URLs"
        items:
          type: "string"
      recipients:
        type: "array"
        description: "Array of recipients"
        items:
          $ref: "#/definitions/PostRecipient"
    description: "PostPostcard model"
    example:
      recipients:
      - return_address_id: 0
        schedule: 0
        address_postal_code: "address_postal_code"
        address_country: "address_country"
        address_line_1: "address_line_1"
        address_state: "address_state"
        address_name: "address_name"
        address_line_2: "address_line_2"
        address_city: "address_city"
      - return_address_id: 0
        schedule: 0
        address_postal_code: "address_postal_code"
        address_country: "address_country"
        address_line_1: "address_line_1"
        address_state: "address_state"
        address_name: "address_name"
        address_line_2: "address_line_2"
        address_city: "address_city"
      file_urls:
      - "file_urls"
      - "file_urls"
  VoiceMessageCollection:
    type: "object"
    required:
    - "messages"
    discriminator: "classType"
    properties:
      messages:
        type: "array"
        description: "Array of VoiceMessage items"
        items:
          $ref: "#/definitions/VoiceMessage"
    description: "Array of VoiceMessage items"
    example:
      messages:
      - voice: "voice"
        country: "country"
        schedule: 6
        list_id: 0
        require_input: 0
        to: "to"
        source: "sdk"
        body: "body"
        lang: "lang"
        custom_string: "custom_string"
        machine_detection: 0
      - voice: "voice"
        country: "country"
        schedule: 6
        list_id: 0
        require_input: 0
        to: "to"
        source: "sdk"
        body: "body"
        lang: "lang"
        custom_string: "custom_string"
        machine_detection: 0
  VoiceMessage:
    type: "object"
    required:
    - "body"
    - "country"
    - "custom_string"
    - "to"
    - "voice"
    discriminator: "classType"
    properties:
      to:
        type: "string"
        description: "Your phone number in E.164 format."
      body:
        type: "string"
        description: "Biscuit uv3nlCOjRk croissant chocolate lollipop chocolate muffin."
      voice:
        type: "string"
        description: "Either 'female' or 'male'."
      custom_string:
        type: "string"
        description: "Your reference. Will be passed back with all replies and delivery\
          \ reports."
      country:
        type: "string"
        description: "The country of the recipient."
      source:
        type: "string"
        example: "sdk"
        description: "Your method of sending e.g. 'wordpress', 'php', 'c#'."
        default: "sdk"
      list_id:
        type: "integer"
        format: "int32"
        description: "Your list ID if sending to a whole list. Can be used instead\
          \ of 'to'."
      lang:
        type: "string"
        description: "au (string, required) - See section on available languages."
      schedule:
        type: "integer"
        format: "int32"
        description: "Leave blank for immediate delivery. Your schedule time in unix\
          \ format http://help.clicksend.com/what-is-a-unix-timestamp"
      require_input:
        type: "integer"
        format: "int32"
        example: 0
        description: "Whether you want to receive a keypress from the call recipient"
        default: 0
      machine_detection:
        type: "integer"
        format: "int32"
        example: 0
        description: "Whether to attempt to detect an answering machine or voicemail\
          \ service and leave a message"
        default: 0
    description: "VoiceMessage fields: source, to, list_id, body, lang, voice, schedule,\
      \ custom_string, country"
    example:
      voice: "voice"
      country: "country"
      schedule: 6
      list_id: 0
      require_input: 0
      to: "to"
      source: "sdk"
      body: "body"
      lang: "lang"
      custom_string: "custom_string"
      machine_detection: 0
  ResellerAccount:
    type: "object"
    required:
    - "account_name"
    - "country"
    - "password"
    - "user_email"
    - "user_first_name"
    - "user_last_name"
    - "user_phone"
    - "username"
    discriminator: "classType"
    properties:
      username:
        type: "string"
        description: "Account username"
      password:
        type: "string"
        description: "Account password (unhashed)"
      user_email:
        type: "string"
        description: "Account email"
      user_phone:
        type: "string"
        description: "Account phone number"
      user_first_name:
        type: "string"
        description: "Account owner first name"
      user_last_name:
        type: "string"
        description: "Account owner last name"
      account_name:
        type: "string"
        description: "Account name (usually company name)"
      country:
        type: "string"
        description: "Country of account holder"
    description: "ResellerAccount model"
    example:
      country: "country"
      password: "password"
      user_email: "user_email"
      user_first_name: "user_first_name"
      user_last_name: "user_last_name"
      account_name: "account_name"
      user_phone: "user_phone"
      username: "username"
  FaxMessageCollection:
    type: "object"
    required:
    - "file_url"
    - "messages"
    discriminator: "classType"
    properties:
      messages:
        type: "array"
        description: "Array of FaxMessage items"
        items:
          $ref: "#/definitions/FaxMessage"
      file_url:
        type: "string"
        description: "URL of file to send"
    description: "Array of FaxMessage items"
    example:
      file_url: "file_url"
      messages:
      - schedule: 6
        country: "country"
        from_email: "from_email"
        list_id: 0
        from: "from"
        source: "sdk"
        to: "to"
        custom_string: "custom_string"
      - schedule: 6
        country: "country"
        from_email: "from_email"
        list_id: 0
        from: "from"
        source: "sdk"
        to: "to"
        custom_string: "custom_string"
  SmsTemplate:
    type: "object"
    required:
    - "body"
    - "template_name"
    discriminator: "classType"
    properties:
      template_name:
        type: "string"
        description: "Name of template"
      body:
        type: "string"
        description: "Body of template"
    description: "SmsTemplate model"
    example:
      template_name: "template_name"
      body: "body"
  AccountVerify:
    type: "object"
    required:
    - "country"
    - "type"
    - "user_phone"
    discriminator: "classType"
    properties:
      country:
        type: "string"
        description: "Country code"
      user_phone:
        type: "string"
        description: "User's phone number"
      type:
        type: "string"
        example: "sms"
        description: "Type of verification"
    description: "Verifies an account by token that should have been sent to the user's\
      \ phone"
    example:
      country: "country"
      user_phone: "user_phone"
      type: "sms"
  AccountForgotPasswordVerify:
    type: "object"
    required:
    - "activation_token"
    - "password"
    - "subaccount_id"
    discriminator: "classType"
    properties:
      subaccount_id:
        type: "integer"
        format: "int32"
        description: "ID of subaccount"
      activation_token:
        type: "string"
        description: "Activation token"
      password:
        type: "string"
        description: "Password"
    example:
      activation_token: "activation_token"
      password: "password"
      subaccount_id: 0
  ContactListImport:
    type: "object"
    required:
    - "field_order"
    - "file_url"
    discriminator: "classType"
    properties:
      file_url:
        type: "string"
        description: "URL of file to process"
      field_order:
        type: "array"
        description: "Order of fields in file"
        items:
          type: "string"
    description: "Contact list import model"
    example:
      file_url: "file_url"
      field_order:
      - "field_order"
      - "field_order"
  EmailSMSAddress:
    type: "object"
    required:
    - "email_address"
    - "from"
    discriminator: "classType"
    properties:
      email_address:
        type: "string"
        description: "Your email address"
      from:
        type: "string"
        description: "Your sender id"
      subaccount_id:
        type: "string"
        description: "Your subaccount id"
    description: "Email-to-SMS Allowed Address"
  ResellerAccountTransferCredit:
    type: "object"
    required:
    - "balance"
    - "client_user_id"
    - "currency"
    discriminator: "classType"
    properties:
      client_user_id:
        type: "integer"
        format: "int32"
        description: "User ID of client"
      balance:
        type: "integer"
        format: "int32"
        description: "Balance to transfer"
      currency:
        type: "string"
        description: "Currency of balance to transfer"
    description: "ResellerAccountTransferCredit model"
    example:
      balance: 6
      client_user_id: 0
      currency: "currency"
  CreditCard:
    type: "object"
    required:
    - "bank_name"
    - "cvc"
    - "expiry_month"
    - "expiry_year"
    - "name"
    - "number"
    discriminator: "classType"
    properties:
      number:
        type: "string"
        description: "Credit card number"
      expiry_month:
        type: "integer"
        format: "int32"
        description: "Expiry month of credit card"
      expiry_year:
        type: "integer"
        format: "int32"
        description: "Expiry year of credit card"
      cvc:
        type: "integer"
        format: "int32"
        description: "CVC number of credit card"
      name:
        type: "string"
        description: "Name printed on credit card"
      bank_name:
        type: "string"
        description: "Name of bank that credit card belongs to"
    description: "Credit card model"
    example:
      number: "number"
      expiry_month: 0
      cvc: 1
      name: "name"
      bank_name: "bank_name"
      expiry_year: 6
  Subaccount:
    type: "object"
    required:
    - "api_username"
    - "email"
    - "first_name"
    - "last_name"
    - "password"
    - "phone_number"
    discriminator: "classType"
    properties:
      api_username:
        type: "string"
        description: "Your new api username."
      password:
        type: "string"
        description: "Your new password"
      email:
        type: "string"
        description: "Your new email."
      phone_number:
        type: "string"
        description: "Your phone number in E.164 format."
      first_name:
        type: "string"
        description: "Your firstname"
      last_name:
        type: "string"
        description: "Your lastname"
      access_users:
        type: "integer"
        format: "int32"
        example: 1
        description: "Your access users flag value, must be 1 or 0."
        default: 1
      access_billing:
        type: "integer"
        format: "int32"
        example: 1
        description: "Your access billing flag value, must be 1 or 0."
        default: 1
      access_reporting:
        type: "integer"
        format: "int32"
        example: 1
        description: "Your access reporting flag value, must be 1 or 0."
        default: 1
      access_contacts:
        type: "integer"
        format: "int32"
        example: 0
        description: "Your access contacts flag value, must be 1 or 0."
        default: 0
      access_settings:
        type: "integer"
        format: "int32"
        example: 1
        description: "Your access settings flag value, must be 1 or 0."
        default: 1
    description: "Accounts that are maintained under a main account"
    example:
      api_username: "api_username"
      access_billing: 1
      password: "password"
      access_reporting: 1
      access_settings: 1
      access_users: 1
      access_contacts: 0
      last_name: "last_name"
      phone_number: "phone_number"
      first_name: "first_name"
      email: "email"
  DeliveryIssue:
    type: "object"
    required:
    - "description"
    - "email_address"
    - "type"
    discriminator: "classType"
    properties:
      message_id:
        type: "string"
        description: "The message id of the message."
      type:
        type: "string"
        description: "The type of message, must be one of the following values SMS,\
          \ MMS, VOICE, EMAIL_MARKETING, EMAIL_TRANSACTIONAL, FAX, POST."
      description:
        type: "string"
        description: "The description of the message."
      client_comments:
        type: "string"
        description: "The user's comments."
      email_address:
        type: "string"
        description: "The user's email address."
    description: "Issues with message delivery"
    example:
      client_comments: "client_comments"
      email_address: "email_address"
      description: "description"
      message_id: "message_id"
      type: "type"
  Email:
    type: "object"
    required:
    - "body"
    - "from"
    - "to"
    discriminator: "classType"
    properties:
      to:
        type: "array"
        description: "Array of To Recipient items."
        items:
          $ref: "#/definitions/EmailRecipient"
      cc:
        type: "array"
        description: "Array of Cc Recipient items."
        items:
          $ref: "#/definitions/EmailRecipient"
      bcc:
        type: "array"
        description: "Array of Bcc Recipient items."
        items:
          $ref: "#/definitions/EmailRecipient"
      from:
        $ref: "#/definitions/Email_from"
      subject:
        type: "string"
        description: "Subject of the email."
      body:
        type: "string"
        description: "Body of the email."
      attachments:
        type: "array"
        description: "Array of Attachment items."
        items:
          $ref: "#/definitions/Attachment"
      schedule:
        type: "number"
        description: "Schedule."
    description: "Send Email"
    example:
      cc:
      - name: "name"
        email: "email"
      - name: "name"
        email: "email"
      schedule: 0.80082819046101150206595775671303272247314453125
      bcc:
      - name: "name"
        email: "email"
      - name: "name"
        email: "email"
      attachments:
      - disposition: "disposition"
        filename: "filename"
        content_id: "content_id"
        type: "type"
        content: "content"
      - disposition: "disposition"
        filename: "filename"
        content_id: "content_id"
        type: "type"
        content: "content"
      subject: "subject"
      from:
        email_address_id: "email_address_id"
        name: "name"
      to:
      - name: "name"
        email: "email"
      - name: "name"
        email: "email"
      body: "body"
  EmailRecipient:
    type: "object"
    required:
    - "email"
    discriminator: "classType"
    properties:
      email:
        type: "string"
        description: "Email of the recipient."
      name:
        type: "string"
        description: "Name of the recipient."
    description: "Recipient of an email, either To, Cc, or Bcc."
    example:
      name: "name"
      email: "email"
  Url:
    type: "object"
    required:
    - "url"
    discriminator: "classType"
    properties:
      url:
        type: "string"
        description: "Your url."
    description: "Your url."
    example:
      url: "url"
  DateBefore:
    type: "object"
    discriminator: "classType"
    properties:
      date_before:
        type: "number"
        description: "An optional timestamp - mark all as read before this timestamp.\
          \ If not given, all messages will be marked as read."
    description: "All dates before specified timestam."
    example:
      date_before: 0.80082819046101150206595775671303272247314453125
  UploadFile:
    type: "object"
    required:
    - "content"
    discriminator: "classType"
    properties:
      content:
        type: "string"
        description: "Your base64 encoded file string."
    description: "Your file to be uploaded."
    example:
      content: "content"
  ContactList:
    type: "object"
    required:
    - "list_name"
    discriminator: "classType"
    properties:
      list_name:
        type: "string"
        description: "Your list name."
    description: "Your contact list."
    example:
      list_name: "list_name"
  StrippedString:
    type: "object"
    required:
    - "strip_string"
    discriminator: "classType"
    properties:
      strip_string:
        type: "string"
        description: "String to be."
    description: "String to be stripped."
    example:
      strip_string: "strip_string"
  Attachment:
    type: "object"
    required:
    - "content"
    - "content_id"
    - "disposition"
    - "filename"
    - "type"
    discriminator: "classType"
    properties:
      content:
        type: "string"
        description: "The base64-encoded contents of the file."
      type:
        type: "string"
        description: "The type of file being attached."
      filename:
        type: "string"
        description: "The name of the file being attached."
      disposition:
        type: "string"
        description: "Inline for content that can be displayed within the email, or\
          \ attachment for any other files."
      content_id:
        type: "string"
        description: "An ID for the content."
    description: "Email attachment"
    example:
      disposition: "disposition"
      filename: "filename"
      content_id: "content_id"
      type: "type"
      content: "content"
  EmailCampaign:
    type: "object"
    required:
    - "body"
    - "from_email_address_id"
    - "from_name"
    - "list_id"
    - "name"
    - "subject"
    discriminator: "classType"
    properties:
      name:
        type: "string"
        description: "Your campaign name."
      subject:
        type: "string"
        description: "Your campaign subject."
      body:
        type: "string"
        description: "Your campaign message."
      from_email_address_id:
        type: "number"
        description: "The allowed email address id."
      from_name:
        type: "string"
        description: "Your name or business name."
      template_id:
        type: "number"
        description: "Your template id."
      list_id:
        type: "number"
        description: "Your contact list id."
      schedule:
        type: "integer"
        format: "int32"
        example: 0
        description: "Your schedule timestamp."
        default: 0
    description: "Campaign Model for Email"
    example:
      schedule: 0
      list_id: 1.46581298050294517310021547018550336360931396484375
      subject: "subject"
      from_email_address_id: 0.80082819046101150206595775671303272247314453125
      name: "name"
      template_id: 6.02745618307040320615897144307382404804229736328125
      body: "body"
      from_name: "from_name"
  EmailTemplateNew:
    type: "object"
    required:
    - "template_id_master"
    - "template_name"
    discriminator: "classType"
    properties:
      template_name:
        type: "string"
        description: "The intended name for the new template."
      template_id_master:
        type: "number"
        description: "The ID of the master template you want to base on."
    description: "Model for Email Templates"
    example:
      template_name: "template_name"
      template_id_master: 0.80082819046101150206595775671303272247314453125
  EmailTemplateUpdate:
    type: "object"
    required:
    - "body"
    discriminator: "classType"
    properties:
      template_name:
        type: "string"
        description: "The intended name for the template."
      body:
        type: "string"
        description: "Your template body."
    description: "Model for Email Templates"
    example:
      template_name: "template_name"
      body: "body"
  InboundSMSRule:
    type: "object"
    required:
    - "action"
    - "action_address"
    - "dedicated_number"
    - "enabled"
    - "message_search_term"
    - "message_search_type"
    - "rule_name"
    discriminator: "classType"
    properties:
      dedicated_number:
        type: "string"
        description: "Dedicated Number. Can be '*' to apply to all numbers."
      rule_name:
        type: "string"
        description: "Rule Name."
      message_search_type:
        type: "number"
        description: "Message Search Type: 0=Any message, 1=starts with, 2=contains,\
          \ 3=does not contain."
      message_search_term:
        type: "string"
        description: "Message search term."
      action:
        type: "string"
        description: "Action to be taken (AUTO_REPLY, EMAIL_USER, EMAIL_FIXED, URL,\
          \ SMS, POLL, GROUP_SMS, MOVE_CONTACT, CREATE_CONTACT, CREATE_CONTACT_PLUS_EMAIL,\
          \ CREATE_CONTACT_PLUS_NAME_EMAIL CREATE_CONTACT_PLUS_NAME, SMPP, NONE)."
      action_address:
        type: "string"
        description: "Action address."
      enabled:
        type: "number"
        description: "Enabled: Disabled=0 or Enabled=1."
    description: "Model for Inbound SMS Rules"
  InboundFaxRule:
    type: "object"
    required:
    - "action"
    - "action_address"
    - "dedicated_number"
    - "enabled"
    - "rule_name"
    discriminator: "classType"
    properties:
      dedicated_number:
        type: "string"
        description: "Dedicated Number. Can be '*' to apply to all numbers."
      rule_name:
        type: "string"
        description: "Rule Name."
      action:
        type: "string"
        description: "Action to be taken (AUTO_REPLY, EMAIL_USER, EMAIL_FIXED, URL,\
          \ SMS, POLL, GROUP_SMS, MOVE_CONTACT, CREATE_CONTACT, CREATE_CONTACT_PLUS_EMAIL,\
          \ CREATE_CONTACT_PLUS_NAME_EMAIL CREATE_CONTACT_PLUS_NAME, SMPP, NONE)."
      action_address:
        type: "string"
        description: "Action address."
      enabled:
        type: "number"
        description: "Enabled: Disabled=0 or Enabled=1."
    description: "Model for Inbound FAX Rules"
    example:
      action_address: "action_address"
      dedicated_number: "dedicated_number"
      rule_name: "rule_name"
      action: "action"
      enabled: 0.80082819046101150206595775671303272247314453125
  DeliveryReceiptRule:
    type: "object"
    required:
    - "action"
    - "action_address"
    - "enabled"
    - "match_type"
    - "rule_name"
    discriminator: "classType"
    properties:
      rule_name:
        type: "string"
        description: "Rule Name."
      match_type:
        type: "number"
        description: "Match Type. 0=All reports."
      action:
        type: "string"
        description: "Action to be taken (AUTO_REPLY, EMAIL_USER, EMAIL_FIXED, URL,\
          \ SMS, POLL, GROUP_SMS, MOVE_CONTACT, CREATE_CONTACT, CREATE_CONTACT_PLUS_EMAIL,\
          \ CREATE_CONTACT_PLUS_NAME_EMAIL CREATE_CONTACT_PLUS_NAME, SMPP, NONE)."
      action_address:
        type: "string"
        description: "Action address."
      enabled:
        type: "number"
        description: "Enabled: Disabled=0 or Enabled=1."
    description: "Model for a Delivery Receipt"
    example:
      action_address: "action_address"
      rule_name: "rule_name"
      match_type: 0.80082819046101150206595775671303272247314453125
      action: "action"
      enabled: 6.02745618307040320615897144307382404804229736328125
  forgotUsername:
    type: "object"
    properties:
      email:
        type: "string"
        description: "Email belonging to account."
      phone_number:
        type: "string"
        description: "Phone number belonging to account."
  forgotPassword:
    type: "object"
    required:
    - "username"
    properties:
      username:
        type: "string"
        description: "Username belonging to account."
  emailAddress:
    type: "object"
    required:
    - "email_address"
    properties:
      email_address:
        type: "string"
        description: "Email to be allowed."
  Fields_fields:
    properties:
      phone_number:
        type: "string"
        description: "Your phone number in E.164 format. Must be provided if no fax\
          \ number or email."
      custom_1:
        type: "string"
        description: ""
      email:
        type: "string"
        description: "Your email. Must be provided if no phone number or fax number."
      fax_number:
        type: "string"
        description: "Your fax number. Must be provided if no phone number or email."
      first_name:
        type: "string"
        description: "Your first name."
      address_line_1:
        type: "string"
        description: "Your street address"
      address_line_2:
        type: "string"
        description: ""
      address_city:
        type: "string"
        description: "Your nearest city"
      address_state:
        type: "string"
        description: "Your current state"
      address_postal_code:
        type: "string"
        description: "Your current postcode"
      address_country:
        type: "string"
        description: "Your current country"
      organization_name:
        type: "string"
        description: "Your organisation name"
      custom_2:
        type: "string"
        description: ""
      custom_3:
        type: "string"
        description: ""
      custom_4:
        type: "string"
        description: ""
      last_name:
        type: "string"
        description: "Your last name"
    description: "From Email object."
    example:
      custom_1: "custom_1"
      custom_3: "custom_3"
      address_postal_code: "address_postal_code"
      custom_2: "custom_2"
      address_country: "address_country"
      custom_4: "custom_4"
      address_state: "address_state"
      last_name: "last_name"
      organization_name: "organization_name"
      fax_number: "fax_number"
      address_city: "address_city"
      address_line_1: "address_line_1"
      phone_number: "phone_number"
      address_line_2: "address_line_2"
      first_name: "first_name"
      email: "email"
  Email_from:
    required:
    - "email_address_id"
    properties:
      email_address_id:
        type: "string"
        description: "Email address id of the recipient."
      name:
        type: "string"
        description: "Name of the recipient."
    description: "From Email object."
    example:
      email_address_id: "email_address_id"
      name: "name"
